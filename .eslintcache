[{"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\reportWebVitals.js":"1","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addKeyword\\addKeyword.js":"2","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\updateGuru\\updateGuru.js":"3","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\Footer\\Footer.jsx":"4","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addAvailability\\addAvailability.js":"5","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\App.js":"6","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\index.js":"7","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addCategory\\addCategory.js":"8","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\viewAllGurus\\viewAllGurus.js":"9","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addNewGuru\\addNewGuru.js":"10","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addNewVideo\\addNewVideo.js":"11","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addFilter\\addFilter.js":"12","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\routes.js":"13","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\Layout.jsx":"14","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\TopNavBar\\TopNavBar.jsx":"15","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\Banner\\Banner.js":"16","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\config.js":"17","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\configureStore.js":"18","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Login\\Login.jsx":"19","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\ActionCreators\\alert.js":"20","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\ActionCreators\\auth.js":"21","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\ActionTypes.js":"22","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Login\\TextInput.jsx":"23","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\Reducers\\rootReducer.js":"24","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\Reducers\\userDetails.js":"25","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\Reducers\\alert.js":"26","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\Reducers\\auth.js":"27","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Login\\NewAdminLogin.jsx":"28","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Unauthorized\\Unauthorized.jsx":"29"},{"size":362,"mtime":1606442108006,"results":"30","hashOfConfig":"31"},{"size":5092,"mtime":1611145315756,"results":"32","hashOfConfig":"33"},{"size":49863,"mtime":1611145351597,"results":"34","hashOfConfig":"33"},{"size":5281,"mtime":1610013495628,"results":"35","hashOfConfig":"33"},{"size":18705,"mtime":1611242365827,"results":"36","hashOfConfig":"33"},{"size":2026,"mtime":1611157277002,"results":"37","hashOfConfig":"33"},{"size":967,"mtime":1611108826032,"results":"38","hashOfConfig":"33"},{"size":5075,"mtime":1611145295824,"results":"39","hashOfConfig":"33"},{"size":8551,"mtime":1611157459857,"results":"40","hashOfConfig":"33"},{"size":33739,"mtime":1611116992067,"results":"41","hashOfConfig":"33"},{"size":29562,"mtime":1611145330587,"results":"42","hashOfConfig":"33"},{"size":5091,"mtime":1611145307434,"results":"43","hashOfConfig":"33"},{"size":1509,"mtime":1611111059126,"results":"44","hashOfConfig":"33"},{"size":780,"mtime":1610012749198,"results":"45","hashOfConfig":"33"},{"size":3157,"mtime":1611157705218,"results":"46","hashOfConfig":"33"},{"size":239,"mtime":1610022685160,"results":"47","hashOfConfig":"33"},{"size":382,"mtime":1611104998657,"results":"48","hashOfConfig":"33"},{"size":496,"mtime":1611104106111,"results":"49","hashOfConfig":"33"},{"size":5218,"mtime":1611146683044,"results":"50","hashOfConfig":"33"},{"size":386,"mtime":1611099938037,"results":"51","hashOfConfig":"33"},{"size":3846,"mtime":1611146201500,"results":"52","hashOfConfig":"33"},{"size":1865,"mtime":1611110074926,"results":"53","hashOfConfig":"33"},{"size":902,"mtime":1611103878038,"results":"54","hashOfConfig":"33"},{"size":299,"mtime":1611100512836,"results":"55","hashOfConfig":"33"},{"size":1155,"mtime":1611100547175,"results":"56","hashOfConfig":"33"},{"size":558,"mtime":1611100409473,"results":"57","hashOfConfig":"33"},{"size":3125,"mtime":1611156113783,"results":"58","hashOfConfig":"33"},{"size":5852,"mtime":1611166844977,"results":"59","hashOfConfig":"33"},{"size":338,"mtime":1611117488439,"results":"60","hashOfConfig":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"545yc0",{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},"156o7o3",{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\reportWebVitals.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addKeyword\\addKeyword.js",["131","132"],"import React,{useEffect, useState,useRef} from 'react'\r\nimport {ListBox} from \"primereact/listbox\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Toast } from 'primereact/toast';\r\nimport Banner from '../Layout/Banner/Banner';\r\nimport { Container,Row,Col,Spinner,Alert } from 'reactstrap';\r\nimport {useSelector} from \"react-redux\";\r\nimport Unauthorized from '../Unauthorized/Unauthorized';\r\nimport \"./style.css\";\r\nfunction AddKeyword() {\r\n    const toast = useRef(null);\r\n    const toast1 = useRef(null);\r\n    const auth = useSelector(state => state.auth)\r\n    const [keywords,setKeywords] = useState([]);\r\n    const [loading,setLoading] = useState(true);\r\n    const [fetching,setFetching] = useState(false);\r\n    const [inProgress,setInProgress] = useState(false);\r\n    const [name,setName] = useState(\"\");\r\n    const showSuccess = () => {\r\n        toast.current.show({severity:'success', summary: 'Category added', detail:`${name} has been added`, life: 3000});\r\n    }\r\n    const showError = () => {\r\n        toast1.current.show({severity:'error', summary: 'Failed to add', detail:'Please try again with a different name', life: 3000});\r\n    }\r\n    const fetchCategories = ()=>{\r\n        if(!loading){\r\n            setFetching(true);\r\n        }\r\n        fetch(`https://la6s3169jc.execute-api.us-east-2.amazonaws.com/v1/skillset`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setKeywords(result.body);\r\n                if(loading){\r\n                    setLoading(false);\r\n                }\r\n                setFetching(false);\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    useEffect(()=>{\r\n        fetchCategories();\r\n    },[]);\r\n    const itemTemplate = (option) => {\r\n        return (\r\n            <h5 id={option.ID}>{option.name}</h5>\r\n        );\r\n    }\r\n    const handleAdd = ()=>{\r\n        setInProgress(true);\r\n        const fetchOptions = {\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({name:name})\r\n        }\r\n        fetch(`https://la6s3169jc.execute-api.us-east-2.amazonaws.com/v1/skillset`,fetchOptions).then(response=>{\r\n            if(response.statusCode===201){\r\n                return response.json();\r\n            }\r\n            else{\r\n                showError();\r\n            }\r\n        }).then(jsonResponse=>{\r\n            return jsonResponse;\r\n        }).then(()=>{\r\n            setInProgress(false);\r\n            showSuccess();\r\n            setName(\"\");\r\n            fetchCategories();\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} position=\"bottom-right\" />\r\n            <Toast ref={toast1} position=\"bottom-right\" />\r\n            {auth.idToken?\r\n                loading?\r\n                <div className=\"loader-container\">\r\n                    <div id=\"preloader\">\r\n                        <div id=\"status\">\r\n                        <div className=\"spinner\">\r\n                            <div className=\"double-bounce1\" />\r\n                            <div className=\"double-bounce2\" />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <>\r\n                    <Banner title=\"Add Keyword\"/>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={6} className=\"left-container\">\r\n                            {fetching?\r\n                            <>\r\n                                <Spinner color=\"primary\"/>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <h3 className=\"left-heading\">Keywords</h3>\r\n                                <ListBox options={keywords} filter optionLabel=\"name\"\r\n                                    itemTemplate={itemTemplate} className=\"category-list\" />\r\n                            </>}\r\n                            </Col>\r\n                            <Col md={6} className=\"right-container\">\r\n                            <h4 className=\"left-heading\">Add new Keyword</h4>\r\n                            <div className=\"p-inputgroup\">\r\n                                <InputText placeholder=\"Enter Name\" id=\"filter-name\" onChange={(event)=>{\r\n                                    setName(event.target.value);\r\n                                }} value={name}/>\r\n                                {inProgress?<Spinner color=\"primary\"/>:<Button label=\"Add\" onClick={handleAdd}/>}\r\n                            </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </>\r\n            :\r\n            <Unauthorized/>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddKeyword\r\n\r\n\r\n",["133","134"],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\updateGuru\\updateGuru.js",["135","136","137","138"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport {\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormGroup,\r\n    Row,\r\n    Spinner,\r\n    Label,\r\n    Input\r\n} from 'reactstrap';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Toast } from 'primereact/toast';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport { TabView, TabPanel } from 'primereact/tabview';\r\nimport {Button} from \"primereact/button\";\r\nimport \"./style.css\"\r\nimport Banner from '../Layout/Banner/Banner';\r\nimport {useSelector} from \"react-redux\";\r\nimport Unauthorized from '../Unauthorized/Unauthorized';\r\nfunction UpdateGuru() {\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const toast = useRef(null);\r\n    const toast1 = useRef(null);\r\n    const toast2 = useRef(null);\r\n    const toast3 = useRef(null);\r\n    const toast4 = useRef(null);\r\n    const auth = useSelector(state => state.auth)\r\n    const [name,setName] = useState({firstName:\"\",secondName:\"\"});\r\n    const [id,setId] = useState(\"\");\r\n    const [activeIndex,setActiveIndex] = useState(0);\r\n    const [email,setEmail] = useState(\"\");\r\n    const [bio,setBio] = useState(\"\");\r\n    const [profileString,setProfileString] = useState(\"\");\r\n    const [thumbnailString,setThumbnailString] = useState(\"\");\r\n    const [videoString,setVideoString] = useState(\"\");\r\n    const [keywords,setKeywords] = useState([]);\r\n    const [categories,setCategories] = useState([]);\r\n    const [filters,setFilters] = useState([]);\r\n    const [selectedCategory,setSelectedCategory] = useState(null);\r\n    const [selectedFilter,setSelectedFilter] = useState(null);\r\n    const [selectedKeyword,setSelectedKeyword] = useState(null);\r\n    const [displayDialog,setDisplayDialog] = useState({\r\n        data:false,\r\n        profile:false,\r\n        introVideo:false,\r\n    });\r\n    const [change,setChange] = useState(null);\r\n    const [links,setLinks] = useState({\r\n        profile:\"\",\r\n        thumbnail:\"\",\r\n        video:\"\",\r\n    })\r\n    const [profilePreview,setProfilePreview] = useState({\r\n        image:null,\r\n        name:null,\r\n        size:null,\r\n    });\r\n    const [thumbnailPreview,setThumbnailPreview] = useState({\r\n        image:null,\r\n        name:null,\r\n        size:null,\r\n    });\r\n    const [videoPreview,setVideoPreview] = useState({\r\n        image:null,\r\n        name:null,\r\n        size:null,\r\n    });\r\n    const [guruObj,setGuruObj] = useState(null);\r\n    const [loading,setLoading] = useState({keyword:true,filter:true,category:true,guruObj:true});\r\n    const [uploading,setUploading] = useState({profile:false,thumbnail:false,video:false,whole:false});\r\n    const fetchFilters = ()=>{\r\n        fetch(`https://1qpe25db41.execute-api.us-east-2.amazonaws.com/v1/filter`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setFilters(result.body);\r\n                setLoading((prev)=>{\r\n                    return {...prev,filter:false}\r\n                });\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    const fetchCategories = ()=>{\r\n        fetch(`https://6w9erowpnj.execute-api.us-east-2.amazonaws.com/v1/categories`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setCategories(result.body);\r\n                setLoading((prev)=>{\r\n                    return {...prev,category:false}\r\n                });\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    const fetchKeywords = ()=>{\r\n        fetch(`https://la6s3169jc.execute-api.us-east-2.amazonaws.com/v1/skillset`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setKeywords(result.body);\r\n                setLoading((prev)=>{\r\n                    return {...prev,keyword:false}\r\n                });\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    const onUploadComplete = (type) => {\r\n        if(type===1){\r\n            toast.current.show({severity: 'success', summary: 'Success', detail: 'The profile picture was uploaded'});\r\n        }\r\n        else if(type===2){\r\n            toast1.current.show({severity: 'success', summary: 'Success', detail: 'The intro video thumbnail was uploaded'});\r\n        }\r\n        else if(type===3){\r\n            toast2.current.show({severity: 'success', summary: 'Success', detail: 'The intro video was uploaded'});\r\n        }\r\n    }\r\n    const fetchGuruData = async ()=>{\r\n        setLoading((prev)=>{\r\n            return {...prev,guruObj:true}\r\n        })\r\n        const guruId = await query.get(\"id\");\r\n        fetch(`https://j6lw75i817.execute-api.us-east-2.amazonaws.com/v1/gurus/${guruId}`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setGuruObj(result.body);\r\n                const guruObj = result.body;\r\n                console.log(guruObj);\r\n                setName({firstName:guruObj.firstName,secondName:guruObj.lastName});\r\n                setEmail(guruObj.email);\r\n                setBio(guruObj.bio);\r\n                //setLinks({profile:guruObj.profilePhoto,thumbnail:guruObj.introVideo.photo,video:guruObj.introVideo.video});\r\n                setSelectedCategory(guruObj.categories);\r\n                setSelectedKeyword(guruObj.keywords);\r\n                setSelectedFilter(guruObj.filters);\r\n                setLoading((prev)=>{\r\n                    return {...prev,guruObj:false}\r\n                })\r\n            })\r\n    }\r\n    useEffect(()=>{\r\n        setId(query.get(\"id\"));\r\n        fetchCategories();\r\n        fetchFilters();\r\n        fetchKeywords();\r\n        fetchGuruData();\r\n    },[])\r\n    const itemTemplate = (option) => {\r\n        if (option) {\r\n            return (\r\n                <div className=\"item-container\">\r\n                    <div id={option.ID}>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n        return \"Choose a value\";\r\n    }\r\n    const uploadHandlerProfile = (event)=>{\r\n        setUploading((prev)=>{\r\n            return {...prev,profile:true}\r\n        })\r\n        const guruName=name.firstName+\" \"+name.secondName;\r\n        const fetchOptions = {\r\n            method: \"POST\",\r\n            body: JSON.stringify({guruName:guruName,type:\"profile\",timeStamp:~~(+new Date() / 1000)}),\r\n        };\r\n        fetch(\"https://5hsr4euhfe.execute-api.us-east-2.amazonaws.com/dev/uploadProfile\",fetchOptions).then(response=>{\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        })\r\n        .then(jsonResponse=>{\r\n            return jsonResponse;\r\n        })\r\n        .then(async (resObj)=>{\r\n            let binary = atob(profileString.split(\",\")[1])\r\n            let blobArray=[];\r\n            for(let i=0;i<binary.length;i++){\r\n                blobArray.push(binary.charCodeAt(i))\r\n            }\r\n            let blobData = new Blob([new Uint8Array(blobArray)],{type:'image/jpeg'});\r\n            const result = await fetch(resObj.uploadURL,{method:\"PUT\",body:blobData});\r\n            setUploading((prev)=>{\r\n                return {...prev,profile:false}\r\n            })\r\n            setLinks((prev)=>{\r\n                return {...prev,profile:resObj.uploadURL.split(\"?\")[0]}\r\n            })\r\n            onUploadComplete(1);\r\n        \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n    }\r\n    const uploadHandlerThumbnail = (event)=>{\r\n        setUploading((prev)=>{\r\n            return {...prev,thumbnail:true}\r\n        })\r\n        const guruName=name.firstName+\" \"+name.secondName;\r\n        const fetchOptions = {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: JSON.stringify({guruName:guruName,type:\"thumbnail\",timeStamp:~~(+new Date() / 1000)}),\r\n\t\t};\r\n        fetch(\"https://5hsr4euhfe.execute-api.us-east-2.amazonaws.com/dev/uploadProfile\",fetchOptions).then(response=>{\r\n            if(response.ok){\r\n            return response.json();\r\n            }\r\n        })\r\n        .then(jsonResponse=>{\r\n            return jsonResponse;\r\n        })\r\n        .then(async (resObj)=>{\r\n            let binary = atob(thumbnailString.split(\",\")[1])\r\n            let blobArray=[];\r\n            for(let i=0;i<binary.length;i++){\r\n                blobArray.push(binary.charCodeAt(i))\r\n            }\r\n            let blobData = new Blob([new Uint8Array(blobArray)],{type:'image/jpeg'});\r\n            const result = await fetch(resObj.uploadURL,{method:\"PUT\",body:blobData});\r\n            setUploading((prev)=>{\r\n                return {...prev,thumbnail:false}\r\n            })\r\n            setLinks((prev)=>{\r\n                return {...prev,thumbnail:resObj.uploadURL.split(\"?\")[0]}\r\n            })\r\n            onUploadComplete(2);\r\n        \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n    }\r\n    const uploadHandlerVideo = (event)=>{\r\n        setUploading((prev)=>{\r\n            return {...prev,video:true}\r\n        })\r\n        const videoID = parseInt(Math.random() * 10000000);\r\n        const guruName=name.firstName+\" \"+name.secondName;\r\n        const fetchOptions = {\r\n            method: \"POST\",\r\n            body: JSON.stringify({guruName:guruName,videoID:videoID,type:\"intro\",timeStamp:~~(+new Date() / 1000)}),\r\n        };\r\n        fetch(\"https://5hsr4euhfe.execute-api.us-east-2.amazonaws.com/dev/uploadVideo\",fetchOptions).then(response=>{\r\n        if(response.ok){\r\n            return response.json();\r\n        }\r\n        })\r\n        .then(jsonResponse=>{\r\n            return jsonResponse;\r\n        })\r\n        .then(async (resObj)=>{\r\n            let binary = atob(videoString.split(\",\")[1])\r\n            let blobArray=[];\r\n            for(let i=0;i<binary.length;i++){\r\n                blobArray.push(binary.charCodeAt(i))\r\n            }\r\n            let blobData = new Blob([new Uint8Array(blobArray)],{type:'video/mp4'});\r\n            const result = await fetch(resObj.uploadURL,{method:\"PUT\",body:blobData});\r\n            setUploading((prev)=>{\r\n                return {...prev,video:false}\r\n            })\r\n            setLinks((prev)=>{\r\n                return {...prev,video:resObj.uploadURL.split(\"?\")[0]}\r\n            })\r\n            onUploadComplete(3);\r\n        \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n    }\r\n    const handleChangeProfile = (event) =>{\r\n        const file = document.getElementById(\"guru-profile\").files[0];\r\n        if(file){\r\n            let reader = new FileReader();\r\n            reader.onload = (e)=>{\r\n                if (!e.target.result.includes('data:image/jpeg')) {\r\n                    alert('Wrong file type - JPEG only.')\r\n                }\r\n                else{\r\n                    setProfilePreview((prev)=>{\r\n                        return {image:URL.createObjectURL(event.target.files[0]),name:event.target.files[0].name,size:Math.round(event.target.files[0].size/1024)}\r\n                    })\r\n                    setProfileString(e.target.result);\r\n                }\r\n            } \r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    const handleChangeThumbnail = (event) =>{\r\n        const file = document.getElementById(\"guru-intro-thumbnail\").files[0];\r\n        if(file){\r\n            let reader = new FileReader();\r\n            reader.onload = (e)=>{\r\n                if (!e.target.result.includes('data:image/jpeg')) {\r\n                    alert('Wrong file type - JPEG only.')\r\n                }\r\n                else{\r\n                    setThumbnailPreview((prev)=>{\r\n                        return {image:URL.createObjectURL(event.target.files[0]),name:event.target.files[0].name,size:Math.round(event.target.files[0].size/1024)}\r\n                    })\r\n                    setThumbnailString(e.target.result);\r\n                }\r\n            } \r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    const handleChangeVideo = (event) =>{\r\n        const file = document.getElementById(\"guru-intro-video\").files[0];\r\n        if(file){\r\n            let reader = new FileReader();\r\n            reader.onload = (e)=>{\r\n                if (!e.target.result.includes('data:video/mp4')) {\r\n                    alert('Wrong file type - MP4 only.')\r\n                }\r\n                else{\r\n                    setVideoPreview((prev)=>{\r\n                        return {image:URL.createObjectURL(event.target.files[0]),name:event.target.files[0].name,size:Math.round(event.target.files[0].size/1024)}\r\n                    })\r\n                    setVideoString(e.target.result);\r\n                }\r\n            } \r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    const handleUpdate = (type)=>{\r\n        if(change.length>0){\r\n            let updateObj = {};\r\n            let introVideoObj ={...guruObj.introVideo};\r\n            change.forEach(changeObj=>{\r\n                if(changeObj.id===\"categories\")\r\n                    updateObj[`${changeObj.id}`] = selectedCategory;\r\n                else if (changeObj.id===\"filters\")\r\n                    updateObj[`${changeObj.id}`] = selectedFilter;\r\n                else if (changeObj.id===\"keywords\")\r\n                    updateObj[`${changeObj.id}`] = selectedKeyword;\r\n                else if (changeObj.id===\"thumbnail\")\r\n                    introVideoObj.photo = links.thumbnail;\r\n                else if (changeObj.id===\"video\")\r\n                    introVideoObj.video = links.video;\r\n                else\r\n                    updateObj[`${changeObj.id}`] = changeObj.new;\r\n            })\r\n            if(type===\"intro\"){\r\n                updateObj[\"introVideo\"] = introVideoObj;\r\n            }\r\n            console.log(updateObj);\r\n            const fetchOptions = {\r\n                method: \"PUT\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\"\r\n                },\r\n                body: JSON.stringify(updateObj),\r\n            }\r\n            fetch(`https://j6lw75i817.execute-api.us-east-2.amazonaws.com/v1/gurus/${id}`,fetchOptions).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            })\r\n            .then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(resObj=>{\r\n                setName({firstName:\"\",secondName:\"\"});\r\n                setEmail(\"\");\r\n                setBio(\"\");\r\n                setSelectedCategory(null);\r\n                setSelectedFilter(null);\r\n                setSelectedKeyword(null);\r\n                setProfilePreview({\r\n                    image:null,\r\n                    name:null,\r\n                    size:null,\r\n                });\r\n                setThumbnailPreview({\r\n                    image:null,\r\n                    name:null,\r\n                    size:null,\r\n                });\r\n                setVideoPreview({\r\n                    image:null,\r\n                    name:null,\r\n                    size:null,\r\n                });\r\n                setLinks({\r\n                    profile:\"\",\r\n                    thumbnail:\"\",\r\n                    video:\"\",\r\n                })\r\n                try{\r\n                    document.getElementById(\"guru-profile\").value=\"\";\r\n                }\r\n                catch(e){\r\n\r\n                }\r\n                try{\r\n                    document.getElementById(\"guru-intro-video\").value=\"\";\r\n                }\r\n                catch(e){\r\n\r\n                }\r\n                try{\r\n                    document.getElementById(\"guru-intro-thumbnail\").value=\"\";\r\n                }\r\n                catch(e){\r\n\r\n                }\r\n                setActiveIndex(0);\r\n                setDisplayDialog({\r\n                    profile:false,\r\n                    data:false,\r\n                    introVideo:false,\r\n                })\r\n                fetchGuruData();\r\n                toast4.current.show({severity: 'success', summary: 'Update Successfully', detail: `${guruObj.firstName} ${guruObj.lastName}'s profile was updated successfully`});\r\n            })\r\n        }\r\n        else{\r\n            toast3.current.show({severity: 'error', summary: 'No changes found', detail: 'Please make changes to the existing values to update them'});\r\n        }\r\n    }\r\n    const handleUpdateData = (event)=>{\r\n        event.preventDefault();\r\n        const changeArray=[];\r\n        if(!(guruObj.firstName===name.firstName)){\r\n            changeArray.push({\r\n                name:\"First Name\",\r\n                id:\"firstName\",\r\n                new:name.firstName,\r\n                old:guruObj.firstName,\r\n            })\r\n        }\r\n        \r\n        if(!(guruObj.lastName===name.secondName)){\r\n            changeArray.push({\r\n                name:\"Last Name\",\r\n                id:\"lastName\",\r\n                new:name.secondName,\r\n                old:guruObj.lastName,\r\n            })\r\n        }\r\n        if(!(guruObj.email===email)){\r\n            changeArray.push({\r\n                name:\"Email ID\",\r\n                id:\"email\",\r\n                new:email,\r\n                old:guruObj.email,\r\n            })\r\n        }\r\n        if(!(guruObj.bio===bio)){\r\n            changeArray.push({\r\n                name:\"Bio\",\r\n                id:\"bio\",\r\n                new:bio,\r\n                old:guruObj.bio,\r\n            })\r\n        }\r\n        let oldCategories = \"\";\r\n        guruObj.categories.forEach(category=>{\r\n            oldCategories+=(category.name+\", \");\r\n        })\r\n        let newCategories =\"\";\r\n        selectedCategory.forEach(category=>{\r\n            newCategories+=(category.name+\", \");\r\n        })\r\n        if(!(newCategories===oldCategories)){\r\n            changeArray.push({\r\n                name:\"Categories\",\r\n                id:\"categories\",\r\n                new:newCategories,\r\n                old:oldCategories,\r\n            })\r\n        }\r\n        let oldFilters = \"\";\r\n        guruObj.filters.forEach(filter=>{\r\n            oldFilters+=(filter.name+\", \");\r\n        })\r\n        let newFilters =\"\";\r\n        selectedFilter.forEach(filter=>{\r\n            newFilters+=(filter.name+\", \");\r\n        })\r\n        if(!(newFilters===oldFilters)){\r\n            changeArray.push({\r\n                name:\"Filters\",\r\n                id:\"filters\", \r\n                new:newFilters,\r\n                old:oldFilters,\r\n            })\r\n        }\r\n        let oldKeywords = \"\";\r\n        guruObj.keywords.forEach(keyword=>{\r\n            oldKeywords+=(keyword.name+\", \");\r\n        })\r\n        let newKeywords =\"\";\r\n        selectedKeyword.forEach(keyword=>{\r\n            newKeywords+=(keyword.name+\", \");\r\n        })\r\n        if(!(newKeywords===oldKeywords)){\r\n            changeArray.push({\r\n                name:\"Keywords\",\r\n                id:\"keywords\",\r\n                new:newKeywords,\r\n                old:oldKeywords,\r\n            })\r\n        }\r\n        setChange(changeArray);\r\n        setDisplayDialog((prev)=>{\r\n            return {...prev,data:true}\r\n        });\r\n\r\n    }\r\n    const handleUpdateProfile = (event)=>{\r\n        event.preventDefault();\r\n        const changeArray = [];\r\n        if(links.profile!==\"\"){\r\n            changeArray.push({\r\n                id:\"profilePhoto\",\r\n                name:\"Profile\",\r\n                old:guruObj.profilePhoto,\r\n                new:links.profile,\r\n            })\r\n        }\r\n        // changeArray.push({\r\n        //     name:\"Profile Picture\",\r\n        //     id:\"profilePhoto\",\r\n        //     old:guruObj.profilePhoto,\r\n        //     new:guruObj.profilePhoto,\r\n        // })\r\n        setChange(changeArray);\r\n        setDisplayDialog((prev)=>{\r\n            return {\r\n                ...prev,\r\n                profile:true,\r\n            }\r\n        })\r\n    }\r\n    const handleUpdateIntro = (event) =>{\r\n        event.preventDefault();\r\n        const changeArray=[];\r\n        if(links.thumbnail!==\"\"){\r\n            changeArray.push({\r\n                id:\"thumbnail\",\r\n                name:\"Intro Video Thumbnail\",\r\n                old:guruObj.introVideo.photo,\r\n                new:links.thumbnail,\r\n            })\r\n        }\r\n        if(links.video!==\"\"){\r\n            changeArray.push({\r\n                name:\"Intro Video\",\r\n                id:\"video\",\r\n                old:guruObj.introVideo.video,\r\n                new:links.video,\r\n            })\r\n        }\r\n        // changeArray.push({\r\n        //     name:\"Intro Video Thumbnail\",\r\n        //     type:\"thumbnail\",\r\n        //     id:\"thumbnail\",\r\n        //     old:guruObj.introVideo.photo,\r\n        //     new:guruObj.introVideo.photo,\r\n        // })\r\n        // changeArray.push({\r\n        //     name:\"Intro Video\",\r\n        //     type:\"video\",\r\n        //     id:\"video\",\r\n        //     old:guruObj.introVideo.video,\r\n        //     new:guruObj.introVideo.video,\r\n        // })\r\n        setChange(changeArray);\r\n        setDisplayDialog((prev)=>{\r\n            return {\r\n                ...prev,\r\n                introVideo:true,\r\n            }\r\n        })\r\n    }\r\n    const footer =(type) => {\r\n        return (<div className=\"comparison-footer\">\r\n            <Button label=\"Cancel\" icon=\"pi pi-times\" onClick={() => setDisplayDialog((prev)=>{\r\n                const obj = {...prev};\r\n                obj[`${type}`]=false;\r\n                return obj\r\n            })} className=\"cancel-btn\" />\r\n            <Button label=\"Update\" icon=\"pi pi-check\" onClick={()=>{handleUpdate(type)}} autoFocus className=\"update-confirm-btn\" />\r\n        </div>);\r\n    }\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast1} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast2} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast3} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast4} position=\"bottom-right\"></Toast>\r\n            <Dialog header=\"Your Changes\" visible={displayDialog.data} style={{ width: '80vw' }} footer={footer(\"profile\")} onHide={() => setDisplayDialog((prev)=>{\r\n                return {...prev,data:false}\r\n            })}>\r\n                <div className=\"comparison-container\">\r\n                {change?\r\n                    change.length>0?\r\n                        change.map((change)=>{\r\n                        return (\r\n                            <>\r\n                                <h5 className=\"comparison-heading\">{change.name}</h5>\r\n                                <div className=\"comparison-parent\">\r\n                                    <div className=\"comparison-left\"><h6>{change.old}</h6></div>\r\n                                    <div className=\"comparison-right\"><h6>{change.new}</h6></div>\r\n                                </div>\r\n                            </>);\r\n                        })\r\n                        :\r\n                        <h4>There are no changes</h4>\r\n                    :\r\n                    null\r\n                }\r\n                </div>\r\n            </Dialog>\r\n            <Dialog header=\"Your Changes\" visible={displayDialog.profile} style={{ width: '80vw' }} footer={footer(\"data\")} onHide={() => setDisplayDialog((prev)=>{\r\n                return {...prev,profile:false}\r\n            })}>\r\n                <div className=\"comparison-container\">\r\n                {change?\r\n                    change.length>0?\r\n                        change.map((change)=>{\r\n                        return (\r\n                            <>\r\n                                <h5 className=\"comparison-heading\">{change.name}</h5>\r\n                                <div className=\"comparison-parent\">\r\n                                    <div className=\"comparison-left\"><img src={change.old} alt=\"old\" className=\"comparison-img\"/></div>\r\n                                    <div className=\"comparison-right\"><img src={change.new} alt=\"new\" className=\"comparison-img\"/></div>\r\n                                </div>\r\n                            </>);\r\n                        })\r\n                        :\r\n                        <h4>There are no changes</h4>\r\n                    :\r\n                    null\r\n                }\r\n                </div>\r\n            </Dialog>\r\n            <Dialog header=\"Your Changes\" visible={displayDialog.introVideo} style={{ width: '80vw' }} footer={footer(\"intro\")} onHide={() => setDisplayDialog((prev)=>{\r\n                return {...prev,introVideo:false}\r\n            })}>\r\n                <div className=\"comparison-container\">\r\n                {change?\r\n                    change.length>0?\r\n                        change.map((change)=>{\r\n                        if(change.id===\"video\"){\r\n                            \r\n                            return <>\r\n                                <h5 className=\"comparison-heading\">{change.name}</h5>\r\n                                <div className=\"comparison-parent\">\r\n                                    <div className=\"comparison-left\"><video src={change.old} className=\"comparison-video\" controls/></div>\r\n                                    <div className=\"comparison-right\"><video src={change.new} className=\"comparison-video\"controls/></div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                        else{\r\n                            return  <>\r\n                                <h5 className=\"comparison-heading\">{change.name}</h5>\r\n                                <div className=\"comparison-parent\">\r\n                                    <div className=\"comparison-left\"><img src={change.old} alt=\"old\" className=\"comparison-img\"/></div>\r\n                                    <div className=\"comparison-right\"><img src={change.new} alt=\"new\" className=\"comparison-img\"/></div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                        \r\n                        })\r\n                        :\r\n                        <h4>There are no changes</h4>\r\n                    :\r\n                    null\r\n                }\r\n                </div>\r\n            </Dialog>\r\n            {auth.idToken?\r\n                !loading.category && !loading.filter && !loading.keyword && !loading.guruObj ? \r\n                <>\r\n                    <Banner title=\"Update Guru Profile\"/>\r\n                    <Container>\r\n                        <Row className=\"justify-content-center\">\r\n                        <Col lg={10} xs={12}>\r\n                            <div className=\"rounded p-4 shadow\">\r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                <Form>\r\n                                    <TabView activeIndex={activeIndex} onTabChange={(event)=>{\r\n                                        setChange([]);\r\n                                        setActiveIndex(event.index);\r\n                                    }}>\r\n                                        <TabPanel header=\"Data\">\r\n                                            <Row>\r\n                                                <Col md={6}>\r\n                                                    <FormGroup>\r\n                                                    <Label>\r\n                                                        Guru Name\r\n                                                    </Label>\r\n                                                    <div className=\"position-relative\">\r\n                                                        <i>\r\n                                                        <FeatherIcon\r\n                                                            icon=\"user\"\r\n                                                            className=\"fea icon-sm icons\"\r\n                                                        />\r\n                                                        </i>\r\n                                                    </div>\r\n                                                    <Input\r\n                                                        name=\"name\"\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control pl-5\"\r\n                                                        placeholder=\"First Name :\"\r\n                                                        value={name.firstName}\r\n                                                        onChange={(event)=>{\r\n                                                            setName((prev)=>{\r\n                                                                return {...prev,firstName:event.target.value}\r\n                                                            })\r\n                                                        }}\r\n                                                    />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md={6}>\r\n                                                    <FormGroup>\r\n                                                    <Label></Label>\r\n                                                    <Input\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control pl-3 mt-2\"\r\n                                                        placeholder=\"Last Name :\"\r\n                                                        value={name.secondName}\r\n                                                        onChange={(event)=>{\r\n                                                            setName((prev)=>{\r\n                                                                return {...prev,secondName:event.target.value}\r\n                                                            })\r\n                                                        }}\r\n                                                    />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup>\r\n                                                    <Label>\r\n                                                        Email{' '}\r\n                                                        \r\n                                                    </Label>\r\n                                                    <div className=\"position-relative\">\r\n                                                        <i>\r\n                                                        <FeatherIcon\r\n                                                            icon=\"mail\"\r\n                                                            className=\"fea icon-sm icons\"\r\n                                                        />\r\n                                                        </i>\r\n                                                    </div>\r\n                                                    <Input\r\n                                                        name=\"email\"\r\n                                                        id=\"email\"\r\n                                                        type=\"email\"\r\n                                                        className=\"form-control pl-5\"\r\n                                                        placeholder=\"Your email :\"\r\n                                                        value={email}\r\n                                                        onChange={(event)=>{\r\n                                                            setEmail(event.target.value)\r\n                                                        }}\r\n                                                    />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup>\r\n                                                    <Label>\r\n                                                        Bio\r\n                                                    </Label>\r\n                                                    <div className=\"position-relative\">\r\n                                                        <i>\r\n                                                        <FeatherIcon\r\n                                                            icon=\"info\"\r\n                                                            className=\"fea icon-sm icons\"\r\n                                                        />\r\n                                                        </i>\r\n                                                    </div>\r\n                                                    <textarea\r\n                                                        name=\"comments\"\r\n                                                        id=\"comments\"\r\n                                                        rows=\"4\"\r\n                                                        className=\"form-control bio-textarea pl-5\"\r\n                                                        value={bio}\r\n                                                        onChange={(event)=>{\r\n                                                            setBio(event.target.value);\r\n                                                        }}\r\n                                                    ></textarea>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup className=\"multiselect-container\">\r\n                                                        <Label>\r\n                                                            Select Categories\r\n                                                        </Label>\r\n                                                        <MultiSelect value={selectedCategory} options={categories}  onChange={(e) => setSelectedCategory(e.value)} optionLabel=\"name\" placeholder=\"\" filter className=\"multiselect-custom\" itemTemplate={itemTemplate} selectedItemTemplate={itemTemplate} />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup className=\"multiselect-container\">\r\n                                                        <Label>\r\n                                                            Select Filters\r\n                                                        </Label>\r\n                                                        <MultiSelect value={selectedFilter} options={filters}  onChange={(e) => {\r\n                                                            setSelectedFilter(e.value)}} optionLabel=\"name\" placeholder=\"\" filter className=\"multiselect-custom\" itemTemplate={itemTemplate} selectedItemTemplate={itemTemplate} />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup className=\"multiselect-container\">\r\n                                                        <Label>\r\n                                                            Select Keywords\r\n                                                        </Label>\r\n                                                        <MultiSelect value={selectedKeyword} options={keywords}  onChange={(e) => {\r\n                                                            setSelectedKeyword(e.value)}} optionLabel=\"name\" placeholder=\"\" filter className=\"multiselect-custom\" itemTemplate={itemTemplate} selectedItemTemplate={itemTemplate} />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col sm={12}>\r\n                                                    <input\r\n                                                    type=\"submit\"\r\n                                                    id=\"submit\"\r\n                                                    name=\"send\"\r\n                                                    className=\"touch-btn\"\r\n                                                    value=\"Update Data\"\r\n                                                    onClick={handleUpdateData}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </TabPanel>\r\n                                        <TabPanel header=\"Profile\">\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup className=\"upload-container\">\r\n                                                        <div className=\"current-profile-container\">\r\n                                                            <img src={guruObj.profilePhoto} className=\"current-profile-img\" alt=\"current-profile\"/>\r\n                                                        </div>\r\n                                                        <Label>\r\n                                                            Upload new Profile Photo\r\n                                                        </Label>\r\n                                                        <input id=\"guru-profile\" onChange={handleChangeProfile} type=\"file\"/>\r\n                                                        <div className=\"preview-container\">\r\n                                                            {!profilePreview.image?<h5>Select a file to upload</h5>:\r\n                                                            <div className=\"preview-bar\">\r\n                                                                <img src={profilePreview.image} className=\"preview-img\" alt=\"preview\"/>\r\n                                                                <h6>{profilePreview.name}</h6>\r\n                                                                <h6>{`${profilePreview.size} kb`}</h6>\r\n                                                                <button onClick={()=>{\r\n                                                                    document.getElementById(\"guru-profile\").value=\"\";\r\n                                                                    setProfilePreview({name:null,image:null,size:null});\r\n                                                                }}>\r\n                                                                    <FeatherIcon icon=\"x-square\"/>\r\n                                                                </button>\r\n                                                            </div>\r\n                                                            \r\n                                                            }\r\n                                                            <div className=\"upload-btn-container\">\r\n                                                                {uploading.profile?<Spinner color=\"black\" className=\"mt-2 ml-3\"/>:<button className=\"upload-btn mt-2\" onClick={uploadHandlerProfile}><FeatherIcon icon=\"upload\"/></button>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col sm={12}>\r\n                                                    <input\r\n                                                    type=\"submit\"\r\n                                                    id=\"submit\"\r\n                                                    name=\"send\"\r\n                                                    className=\"touch-btn\"\r\n                                                    value=\"Update Profile\"\r\n                                                    onClick={handleUpdateProfile}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </TabPanel>\r\n                                        <TabPanel header=\"Intro Video\">\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup className=\"upload-container\">\r\n                                                        <div className=\"current-profile-container\">\r\n                                                            <img src={guruObj.introVideo.photo} className=\"current-profile-img\" alt=\"current-profile\"/>\r\n                                                        </div>\r\n                                                        <Label>\r\n                                                            Update Intro Video Thumbnail\r\n                                                        </Label>\r\n                                                        <input id=\"guru-intro-thumbnail\" onChange={handleChangeThumbnail} type=\"file\"/>\r\n                                                        <div className=\"preview-container\">\r\n                                                            {!thumbnailPreview.image?<h5>Select a file to upload</h5>:\r\n                                                            <div className=\"preview-bar\">\r\n                                                                <img src={thumbnailPreview.image} className=\"preview-img\" alt=\"preview\"/>\r\n                                                                <h6>{thumbnailPreview.name}</h6>\r\n                                                                <h6>{`${thumbnailPreview.size} kb`}</h6>\r\n                                                                <button onClick={()=>{\r\n                                                                    document.getElementById(\"guru-intro-thumbnail\").value=\"\";\r\n                                                                    setThumbnailPreview({name:null,image:null,size:null});\r\n                                                                }}>\r\n                                                                    <FeatherIcon icon=\"x-square\"/>\r\n                                                                </button>\r\n                                                            </div>\r\n                                                            \r\n                                                            }\r\n                                                            <div className=\"upload-btn-container\">\r\n                                                                {uploading.thumbnail?<Spinner color=\"black\" className=\"mt-2 ml-3\"/>:<button className=\"upload-btn mt-2\" onClick={uploadHandlerThumbnail}><FeatherIcon icon=\"upload\"/></button>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup className=\"upload-container\">\r\n                                                    <div className=\"current-profile-container\">\r\n                                                            <video src={guruObj.introVideo.video} className=\"current-profile-img\" controls/>\r\n                                                        </div>\r\n                                                        <Label>\r\n                                                            Update Intro Video\r\n                                                        </Label>\r\n                                                        <input id=\"guru-intro-video\" onChange={handleChangeVideo} type=\"file\"/>\r\n                                                        <div className=\"preview-video-container\">\r\n                                                            {!videoPreview.image?<h5>Select a file to upload</h5>:\r\n                                                            <div className=\"preview-bar\">\r\n                                                                <video src={videoPreview.image} className=\"preview-video\" controls/>\r\n                                                                <h6>{videoPreview.name}</h6>\r\n                                                                <h6>{`${videoPreview.size} kb`}</h6>\r\n                                                                <button onClick={()=>{\r\n                                                                    document.getElementById(\"guru-intro-video\").value=\"\";\r\n                                                                    setVideoPreview({name:null,image:null,size:null});\r\n                                                                }}>\r\n                                                                    <FeatherIcon icon=\"x-square\"/>\r\n                                                                </button>\r\n                                                            </div>\r\n                                                            \r\n                                                            }\r\n                                                            <div className=\"upload-btn-container\">\r\n                                                                {uploading.video?<Spinner color=\"black\" className=\"mt-2 ml-3\"/>:<button className=\"upload-btn mt-2\" onClick={uploadHandlerVideo}><FeatherIcon icon=\"upload\"/></button>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        \r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row> \r\n                                            <Row>\r\n                                                <Col sm={12}>\r\n                                                    <input\r\n                                                    type=\"submit\"\r\n                                                    id=\"submit\"\r\n                                                    name=\"send\"\r\n                                                    className=\"touch-btn\"\r\n                                                    value=\"Update Data\"\r\n                                                    onClick={handleUpdateIntro}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </TabPanel>\r\n                                    </TabView>\r\n                                </Form>\r\n                                </Col>\r\n                            </Row>\r\n                            </div>\r\n                        </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </>\r\n                :\r\n                <div className=\"loader-container\">\r\n                    <div id=\"preloader\">\r\n                        <div id=\"status\">\r\n                        <div className=\"spinner\">\r\n                            <div className=\"double-bounce1\" />\r\n                            <div className=\"double-bounce2\" />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Unauthorized/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateGuru\r\n\r\n","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\Footer\\Footer.jsx",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addAvailability\\addAvailability.js",["139","140","141","142","143","144","145","146","147"],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\App.js",["148","149"],"/* eslint-disable react/no-array-index-key */\n/* eslint-disable max-classes-per-file */\n// import './App.scss';\nimport React, { Suspense,useEffect,useState } from 'react';\nimport {\n  Route,\n  Switch,\n  BrowserRouter as Router,\n  withRouter\n} from 'react-router-dom';\nimport {useDispatch} from \"react-redux\";\nimport Layout from './views/Layout/Layout';\nimport routes from './routes';\nimport './styles/helper.css';\nimport 'primeicons/primeicons.css';\nimport 'primereact/resources/primereact.css';\nimport 'primeflex/primeflex.css';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport {getUser} from \"./Store/ActionCreators/auth\"\nfunction withLayout(WrappedComponent) {\n  return class extends React.PureComponent {\n    render() {\n      return (\n        <Layout>\n          <WrappedComponent />\n        </Layout>\n      );\n    }\n  };\n}\n\nconst Loader = () => (\n  <div id=\"preloader\">\n    <div id=\"status\">\n      <div className=\"spinner\">\n        <div className=\"double-bounce1\" />\n        <div className=\"double-bounce2\" />\n      </div>\n    </div>\n  </div>\n);\n\nfunction App() {\n  const [loading,setLoading] = useState(true);\n  const dispatch = useDispatch();\n  useEffect(()=>{\n    dispatch(getUser()).then(()=>{\n      setLoading(false);     \n    });\n  },[])\n  return (\n    <>\n      <Router>\n        <Suspense fallback={Loader()}>\n          <Switch>\n            {loading?\n              <Loader/>\n            :\n            routes.map((route, idx) =>\n              route.isWithoutLayout ? (\n                <Route\n                  path={route.path}\n                  exact={route.exact}\n                  component={route.component}\n                  key={idx}\n                />\n              ) : (\n                <Route\n                  path={route.path}\n                  exact\n                  component={withLayout(route.component)}\n                  key={idx}\n                />\n              )\n            )\n            }\n          </Switch>\n        </Suspense>\n      </Router>\n    </>\n  );\n}\nexport default App;\n","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\index.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addCategory\\addCategory.js",["150"],"import React,{useEffect, useState, useRef} from 'react'\r\nimport {ListBox} from \"primereact/listbox\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from \"primereact/button\";\r\nimport Banner from '../Layout/Banner/Banner';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Container,Row,Col,Spinner} from 'reactstrap';\r\nimport {useSelector} from \"react-redux\";\r\nimport Unauthorized from '../Unauthorized/Unauthorized';\r\nimport \"./style.css\";\r\nfunction AddCategory() {\r\n    const toast = useRef(null);\r\n    const toast1 = useRef(null);\r\n    const auth = useSelector((state)=>state.auth);\r\n    const [categories,setCategories] = useState([]);\r\n    const [loading,setLoading] = useState(true);\r\n    const [fetching,setFetching] = useState(false);\r\n    const [inProgress,setInProgress] = useState(false);\r\n    const [name,setName] = useState(\"\");\r\n    const showSuccess = () => {\r\n        toast.current.show({severity:'success', summary: 'Category added', detail:`${name} has been added`, life: 3000});\r\n    }\r\n    const showError = () => {\r\n        toast1.current.show({severity:'error', summary: 'Failed to add', detail:'Please try again with a different name', life: 3000});\r\n    }\r\n    const fetchCategories = ()=>{\r\n        if(!loading){\r\n            setFetching(true);\r\n        }\r\n        fetch(`https://6w9erowpnj.execute-api.us-east-2.amazonaws.com/v1/categories`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setCategories(result.body);\r\n                if(loading){\r\n                    setLoading(false);\r\n                }\r\n                setFetching(false);\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    useEffect(()=>{\r\n        fetchCategories();\r\n    },[]);\r\n    const itemTemplate = (option) => {\r\n        return (\r\n            <h5 id={option.ID}>{option.name}</h5>\r\n        );\r\n    }\r\n    const handleAdd = ()=>{\r\n        setInProgress(true);\r\n        const fetchOptions = {\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({name:name})\r\n        }\r\n        fetch(`https://6w9erowpnj.execute-api.us-east-2.amazonaws.com/v1/categories`,fetchOptions).then(response=>{\r\n            if(response.statusCode===200){\r\n                return response.json();\r\n            }\r\n            else{\r\n                showError();\r\n            }\r\n        }).then(jsonResponse=>{\r\n            return jsonResponse;\r\n        }).then(()=>{\r\n            setInProgress(false);\r\n            showSuccess();\r\n            setName(\"\");\r\n            fetchCategories();\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} position=\"bottom-right\" />\r\n            <Toast ref={toast1} position=\"bottom-right\" />\r\n            {auth.idToken?\r\n                loading?\r\n                <div className=\"loader-container\">\r\n                    <div id=\"preloader\">\r\n                        <div id=\"status\">\r\n                        <div className=\"spinner\">\r\n                            <div className=\"double-bounce1\" />\r\n                            <div className=\"double-bounce2\" />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <>\r\n                    <Banner title=\"Add Category\"/>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={6} className=\"left-container\">\r\n                            {fetching?\r\n                            <>\r\n                                <Spinner color=\"primary\"/>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <h3 className=\"left-heading\">Categories</h3>\r\n                                <ListBox options={categories} filter optionLabel=\"name\"\r\n                                    itemTemplate={itemTemplate} className=\"category-list\" />\r\n                            </>}\r\n                            </Col>\r\n                            <Col md={6} className=\"right-container\">\r\n                            <h4 className=\"left-heading\">Add new Category</h4>\r\n                            <div className=\"p-inputgroup\">\r\n                                <InputText placeholder=\"Enter Name\" id=\"filter-name\" onChange={(event)=>{\r\n                                    setName(event.target.value);\r\n                                }} value={name}/>\r\n                                {inProgress?<Spinner color=\"primary\"/>:<Button label=\"Add\" onClick={handleAdd}/>}\r\n                            </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </>\r\n            :<Unauthorized/>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n\r\n","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\viewAllGurus\\viewAllGurus.js",["151","152"],"import React, { useState, useEffect} from 'react';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n} from 'reactstrap';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport FeatherIcon from \"feather-icons-react\";\r\nimport andrew from '../../assets/images/andrewJulienCard.jpg';\r\nimport jon from '../../assets/images/jonAronoffCard.jpg';\r\nimport luke from '../../assets/images/lukeReesCard.jpg';\r\nimport nikki from '../../assets/images/nikkiKiyimbaCard.jpg';\r\nimport abi from '../../assets/images/abiAdamsCard.png';\r\nimport paola from '../../assets/images/paolaLangellaCard.jpg';\r\nimport Banner from '../Layout/Banner/Banner';\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport Unauthorized from '../Unauthorized/Unauthorized';\r\nimport {getUser } from '../../Store/ActionCreators/auth';\r\nfunction ViewAllGurus(){\r\n  const auth = useSelector(state => state.auth)\r\n  const dispatch = useDispatch();\r\n  const [loading,setLoading] = useState(true);\r\n  const [gurus,setGurus] = useState([\r\n    {\r\n      id: 1,\r\n      image: andrew,\r\n      name: 'Andrew Julien',\r\n      keyword: 'Personal Trainer',\r\n      bio:\r\n        'Andrew Julien is a London based high-performance coach. It’s easy to understand why his philosophy is “go hard before home time”… Andrew believes if you truly want…'\r\n    },\r\n    {\r\n      id: 2,\r\n      image: jon,\r\n      name: 'Jon Aronoff',\r\n      keyword: 'Life Coach',\r\n      bio:\r\n        'Jonathan Aronoff is an Internationally Certified Coach, a licensed psychologist, and a psychoanalyst. After 30 years of playing and coaching competitive soccer he…'\r\n    },\r\n    {\r\n      id: 3,\r\n      image: luke,\r\n      name: 'Luke Rees',\r\n      keyword: 'Motivational Coach',\r\n      bio:\r\n        'Luke Rees is a young multi-award-winning International Motivational Speaker, UK Young Leader and Mental Health Ambassador. His contagious energy and passion…'\r\n    },\r\n    {\r\n      id: 4,\r\n      image: nikki,\r\n      name: 'Nikki Kiyimba',\r\n      keyword: 'Holistic Therapy',\r\n      bio:\r\n        'Dr Nikki Kiyimba is a Chartered Clinical Psychologist and Senior University Lecturer. She has specialised in psychological trauma and worked with many people with…'\r\n    },\r\n    {\r\n      id: 5,\r\n      image: abi,\r\n      name: 'Abi Adams',\r\n      keyword: 'Movement Therapy',\r\n      bio:\r\n        'Abi Adams is an Emotional Movement Therapist who empowers people through health and lifestyle choices. Using a mix of yoga, kinesiology, bioenergy and physical…'\r\n    },\r\n    {\r\n      id: 6,\r\n      image: paola,\r\n      name: 'Paola Langella',\r\n      keyword: 'Nutritionist,Pilates Instructor',\r\n      bio:\r\n        'Paola Langella is a Pilates Instructor & Health Coach Nutritionist. She grew up in Italy where she studied ballet for 10 years. During her studies in the UK, whilst…'\r\n    }\r\n  ]);\r\n  useEffect(()=>{\r\n    dispatch(getUser()).then(()=>{\r\n      setLoading(false);\r\n    });\r\n  },[])\r\n    return (\r\n      <>\r\n        {auth.idToken?\r\n          <>\r\n              <Banner title=\"Reset Gurus\"/>\r\n              <section>\r\n                <Container>\r\n                  <Row>\r\n                    {gurus.map((guru, key) => (\r\n                      <Col lg=\"4\" md=\"6\" className=\"mb-4 pb-2\" key={key} name=\"blog\">\r\n                        <Card className=\"blog rounded border-0 shadow overflow-hidden\">\r\n                          <div className=\"position-relative\">\r\n                            <CardImg\r\n                              top\r\n                              src={guru.image}\r\n                              className=\"rounded-top\"\r\n                              alt=\"\"\r\n                            />\r\n                            <div className=\"overlay rounded-top bg-dark\"></div>\r\n                          </div>\r\n                          <CardBody className=\"content\">\r\n                            <h5>\r\n                              <Link to=\"#\" className=\"card-title title text-dark\">\r\n                                {guru.name}\r\n                              </Link>\r\n                            </h5>\r\n                            <h6\r\n                              style={{\r\n                                color: '#ff5001',\r\n                                textTransform: 'capitalize'\r\n                              }}\r\n                            >\r\n                              {guru.keyword}\r\n                            </h6>\r\n                            <p\r\n                              style={{\r\n                                color: '#0f0f0f',\r\n                                fontSize: '16px',\r\n                                marginBottom: '40px',\r\n                                padding: '20px 0px',\r\n                                borderTop: '1px solid lightgray',\r\n                                borderBottom: '1px solid lightgray'\r\n                              }}\r\n                            >\r\n                              {guru.bio}\r\n                            </p>\r\n                            <div className=\"btn-container\">\r\n                              <Link\r\n                                  to={`/update-guru?id=2bf818e6-d0ff-4cb9-896d-0cd6e26d899b`}\r\n                                  className=\"view-profile-btn\"\r\n                              >\r\n                                  <FeatherIcon icon=\"user-plus\" />\r\n                              </Link>\r\n                              <Link\r\n                                  to={`/add-availability?id=2bf818e6-d0ff-4cb9-896d-0cd6e26d899b`}\r\n                                  className=\"view-profile-btn\"\r\n                              >\r\n                                  <FeatherIcon icon=\"calendar\"/>\r\n                              </Link>\r\n                              <Link\r\n                                  to={`/add-new-video?id=2bf818e6-d0ff-4cb9-896d-0cd6e26d899b`}\r\n                                  className=\"view-profile-btn\"\r\n                              >\r\n                                  <FeatherIcon icon=\"video\"/>\r\n                              </Link>\r\n                            </div>\r\n                            \r\n                          </CardBody>\r\n                          <div className=\"author\">\r\n                            <small className=\"text-light user d-block\">\r\n                              <i className=\"mdi mdi-account\"></i> {guru.id}\r\n                            </small>\r\n                            <small className=\"text-light date\">\r\n                              <i className=\"mdi mdi-calendar-check\"></i>{' '}\r\n                              {guru.keyword}\r\n                            </small>\r\n                          </div>\r\n                        </Card>\r\n                      </Col>\r\n                    ))}\r\n      \r\n                    {/* <Col xs=\"12\">\r\n                      <Pagination listClassName=\"justify-content-center mb-0\">\r\n                        <PaginationItem>\r\n                          <PaginationLink to=\"#\" previous>\r\n                            Prev\r\n                          </PaginationLink>\r\n                        </PaginationItem>\r\n                        <PaginationItem active>\r\n                          <PaginationLink to=\"#\">1</PaginationLink>\r\n                        </PaginationItem>\r\n                        <PaginationItem>\r\n                          <PaginationLink to=\"#\">2</PaginationLink>\r\n                        </PaginationItem>\r\n                        <PaginationItem>\r\n                          <PaginationLink to=\"#\">3</PaginationLink>\r\n                        </PaginationItem>\r\n                        <PaginationItem>\r\n                          <PaginationLink to=\"#\" next>\r\n                            Next\r\n                          </PaginationLink>\r\n                        </PaginationItem>\r\n                      </Pagination>\r\n                    </Col> */}\r\n                  </Row>\r\n                </Container>\r\n              </section>\r\n            </>\r\n        :\r\n            auth.isLoading&&loading?\r\n            <div className=\"loader-container\">\r\n                    <div id=\"preloader\">\r\n                        <div id=\"status\">\r\n                        <div className=\"spinner\">\r\n                            <div className=\"double-bounce1\" />\r\n                            <div className=\"double-bounce2\" />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            :\r\n            <Unauthorized/>\r\n        }\r\n\r\n      </>\r\n    );\r\n}\r\n\r\nexport default ViewAllGurus;","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addNewGuru\\addNewGuru.js",["153","154","155"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport {\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormGroup,\r\n    Row,\r\n    Spinner,\r\n    Label,\r\n    Input\r\n} from 'reactstrap';\r\nimport { Toast } from 'primereact/toast';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport \"./style.css\"\r\nimport Banner from '../Layout/Banner/Banner';\r\nimport {useSelector} from \"react-redux\";\r\nimport Unauthorized from '../Unauthorized/Unauthorized';\r\n\r\nfunction AddNewGuru() {\r\n    const toast = useRef(null);\r\n    const toast1 = useRef(null);\r\n    const toast2 = useRef(null);\r\n    const toast3 = useRef(null);\r\n    const toast4 = useRef(null);\r\n    const auth = useSelector(state => state.auth)\r\n    const [name,setName] = useState({firstName:\"\",lastName:\"\"});\r\n    const [email,setEmail] = useState(\"\");\r\n    const [bio,setBio] = useState(\"\");\r\n    const [profileString,setProfileString] = useState(\"\");\r\n    const [thumbnailString,setThumbnailString] = useState(\"\");\r\n    const [videoString,setVideoString] = useState(\"\");\r\n    const [keywords,setKeywords] = useState([]);\r\n    const [categories,setCategories] = useState([]);\r\n    const [filters,setFilters] = useState([]);\r\n    const [selectedCategory,setSelectedCategory] = useState(null);\r\n    const [selectedFilter,setSelectedFilter] = useState(null);\r\n    const [selectedKeyword,setSelectedKeyword] = useState(null);\r\n    const [links,setLinks] = useState({\r\n        profile:\"\",\r\n        thumbnail:\"\",\r\n        video:\"\",\r\n    })\r\n    const [profilePreview,setProfilePreview] = useState({\r\n        image:null,\r\n        name:null,\r\n        size:null,\r\n    });\r\n    const [thumbnailPreview,setThumbnailPreview] = useState({\r\n        image:null,\r\n        name:null,\r\n        size:null,\r\n    });\r\n    const [videoPreview,setVideoPreview] = useState({\r\n        image:null,\r\n        name:null,\r\n        size:null,\r\n    });\r\n    const [loading,setLoading] = useState({keyword:true,filter:true,category:true});\r\n    const [uploading,setUploading] = useState({profile:false,thumbnail:false,video:false,whole:false});\r\n    const fetchFilters = ()=>{\r\n        fetch(`https://1qpe25db41.execute-api.us-east-2.amazonaws.com/v1/filter`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setFilters(result.body);\r\n                setLoading((prev)=>{\r\n                    return {...prev,filter:false}\r\n                });\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    const fetchCategories = ()=>{\r\n        fetch(`https://6w9erowpnj.execute-api.us-east-2.amazonaws.com/v1/categories`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setCategories(result.body);\r\n                setLoading((prev)=>{\r\n                    return {...prev,category:false}\r\n                });\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    const fetchKeywords = ()=>{\r\n        fetch(`https://la6s3169jc.execute-api.us-east-2.amazonaws.com/v1/skillset`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setKeywords(result.body);\r\n                setLoading((prev)=>{\r\n                    return {...prev,keyword:false}\r\n                });\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    const onUploadComplete = (type) => {\r\n        if(type===1){\r\n            toast.current.show({severity: 'success', summary: 'Success', detail: 'The profile picture was uploaded'});\r\n        }\r\n        else if(type===2){\r\n            toast1.current.show({severity: 'success', summary: 'Success', detail: 'The intro video thumbnail was uploaded'});\r\n        }\r\n        else if(type===3){\r\n            toast2.current.show({severity: 'success', summary: 'Success', detail: 'The intro video was uploaded'});\r\n        }\r\n        else if(type===4){\r\n            toast4.current.show({severity: 'success', summary: 'Success', detail: `${name.firstName} ${name.lastName} was added successfully`});\r\n        }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        fetchCategories();\r\n        fetchFilters();\r\n        fetchKeywords();\r\n    },[])\r\n    const checkValidations = () =>{\r\n        if(name.firstName!==\"\"&&name.lastName!==\"\"&&email!==\"\"&&bio!==\"\" && selectedCategory &&selectedCategory.length>0&&selectedFilter&&selectedFilter.length>0&&selectedKeyword&&selectedKeyword.length>0&&links.profile!==\"\"&&links.thumbnail!==\"\"&&links.video!==\"\"){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    const itemTemplate = (option) => {\r\n        if (option) {\r\n            return (\r\n                <div className=\"item-container\">\r\n                    <div id={option.ID}>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n        return \"Choose a value\";\r\n    }\r\n    const uploadHandlerProfile = (event)=>{\r\n        setUploading((prev)=>{\r\n            return {...prev,profile:true}\r\n        })\r\n        const guruName=name.firstName+\" \"+name.lastName;\r\n        const fetchOptions = {\r\n            method: \"POST\",\r\n            body: JSON.stringify({guruName:guruName,type:\"profile\",timeStamp:~~(+new Date() / 1000)}),\r\n        };\r\n        fetch(\"https://5hsr4euhfe.execute-api.us-east-2.amazonaws.com/dev/uploadProfile\",fetchOptions).then(response=>{\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        })\r\n        .then(jsonResponse=>{\r\n            return jsonResponse;\r\n        })\r\n        .then(async (resObj)=>{\r\n            let binary = atob(profileString.split(\",\")[1])\r\n            let blobArray=[];\r\n            for(let i=0;i<binary.length;i++){\r\n                blobArray.push(binary.charCodeAt(i))\r\n            }\r\n            let blobData = new Blob([new Uint8Array(blobArray)],{type:'image/jpeg'});\r\n            const result = await fetch(resObj.uploadURL,{method:\"PUT\",body:blobData});\r\n            setUploading((prev)=>{\r\n                return {...prev,profile:false}\r\n            })\r\n            setLinks((prev)=>{\r\n                return {...prev,profile:resObj.uploadURL.split(\"?\")[0]}\r\n            })\r\n            onUploadComplete(1);\r\n        \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n    }\r\n    const uploadHandlerThumbnail = (event)=>{\r\n        setUploading((prev)=>{\r\n            return {...prev,thumbnail:true}\r\n        })\r\n        const guruName=name.firstName+\" \"+name.lastName;\r\n        const fetchOptions = {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: JSON.stringify({guruName:guruName,type:\"thumbnail\",timeStamp:~~(+new Date() / 1000)}),\r\n\t\t};\r\n        fetch(\"https://5hsr4euhfe.execute-api.us-east-2.amazonaws.com/dev/uploadProfile\",fetchOptions).then(response=>{\r\n            if(response.ok){\r\n            return response.json();\r\n            }\r\n        })\r\n        .then(jsonResponse=>{\r\n            return jsonResponse;\r\n        })\r\n        .then(async (resObj)=>{\r\n            let binary = atob(thumbnailString.split(\",\")[1])\r\n            let blobArray=[];\r\n            for(let i=0;i<binary.length;i++){\r\n                blobArray.push(binary.charCodeAt(i))\r\n            }\r\n            let blobData = new Blob([new Uint8Array(blobArray)],{type:'image/jpeg'});\r\n            const result = await fetch(resObj.uploadURL,{method:\"PUT\",body:blobData});\r\n            setUploading((prev)=>{\r\n                return {...prev,thumbnail:false}\r\n            })\r\n            setLinks((prev)=>{\r\n                return {...prev,thumbnail:resObj.uploadURL.split(\"?\")[0]}\r\n            })\r\n            onUploadComplete(2);\r\n        \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n    }\r\n    const uploadHandlerVideo = (event)=>{\r\n        setUploading((prev)=>{\r\n            return {...prev,video:true}\r\n        })\r\n        const videoID = parseInt(Math.random() * 10000000);\r\n        const guruName=name.firstName+\" \"+name.lastName;\r\n        const fetchOptions = {\r\n            method: \"POST\",\r\n            body: JSON.stringify({guruName:guruName,videoID:videoID,type:\"intro\",timeStamp:~~(+new Date() / 1000)}),\r\n        };\r\n        fetch(\"https://5hsr4euhfe.execute-api.us-east-2.amazonaws.com/dev/uploadVideo\",fetchOptions).then(response=>{\r\n        if(response.ok){\r\n            return response.json();\r\n        }\r\n        })\r\n        .then(jsonResponse=>{\r\n            return jsonResponse;\r\n        })\r\n        .then(async (resObj)=>{\r\n            let binary = atob(videoString.split(\",\")[1])\r\n            let blobArray=[];\r\n            for(let i=0;i<binary.length;i++){\r\n                blobArray.push(binary.charCodeAt(i))\r\n            }\r\n            let blobData = new Blob([new Uint8Array(blobArray)],{type:'video/mp4'});\r\n            const result = await fetch(resObj.uploadURL,{method:\"PUT\",body:blobData});\r\n            setUploading((prev)=>{\r\n                return {...prev,video:false}\r\n            })\r\n            setLinks((prev)=>{\r\n                return {...prev,video:resObj.uploadURL.split(\"?\")[0]}\r\n            })\r\n            onUploadComplete(3);\r\n            \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n    }\r\n    const handleChangeProfile = (event) =>{\r\n        const file = document.getElementById(\"guru-profile\").files[0];\r\n        if(file){\r\n            let reader = new FileReader();\r\n            reader.onload = (e)=>{\r\n                if (!e.target.result.includes('data:image/jpeg')) {\r\n                    alert('Wrong file type - JPEG only.')\r\n                }\r\n                else{\r\n                    setProfilePreview((prev)=>{\r\n                        return {image:URL.createObjectURL(event.target.files[0]),name:event.target.files[0].name,size:Math.round(event.target.files[0].size/1024)}\r\n                    })\r\n                    setProfileString(e.target.result);\r\n                }\r\n            } \r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    const handleChangeThumbnail = (event) =>{\r\n        const file = document.getElementById(\"guru-intro-thumbnail\").files[0];\r\n        if(file){\r\n            let reader = new FileReader();\r\n            reader.onload = (e)=>{\r\n                if (!e.target.result.includes('data:image/jpeg')) {\r\n                    alert('Wrong file type - JPEG only.')\r\n                }\r\n                else{\r\n                    setThumbnailPreview((prev)=>{\r\n                        return {image:URL.createObjectURL(event.target.files[0]),name:event.target.files[0].name,size:Math.round(event.target.files[0].size/1024)}\r\n                    })\r\n                    setThumbnailString(e.target.result);\r\n                }\r\n            } \r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    const handleChangeVideo = (event) =>{\r\n        const file = document.getElementById(\"guru-intro-video\").files[0];\r\n        if(file){\r\n            let reader = new FileReader();\r\n            reader.onload = (e)=>{\r\n                if (!e.target.result.includes('data:video/mp4')) {\r\n                    alert('Wrong file type - MP4 only.')\r\n                }\r\n                else{\r\n                    setVideoPreview((prev)=>{\r\n                        return {image:URL.createObjectURL(event.target.files[0]),name:event.target.files[0].name,size:Math.round(event.target.files[0].size/1024)}\r\n                    })\r\n                    setVideoString(e.target.result);\r\n                }\r\n            } \r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    const handleAdd = (event)=>{\r\n        event.preventDefault();\r\n        const valid = checkValidations();\r\n        if(!valid){\r\n            toast3.current.show({severity: 'error', summary: 'All fields are mandatory', detail: 'Please check that all fields are completely filled'});\r\n        }\r\n        else{\r\n            setUploading((prev)=>{\r\n                return {...prev,whole:true}\r\n            })\r\n            let guruObj = {\r\n                profilePhoto:links.profile,\r\n                techniqueVideos:{\r\n                    videoID:1,\r\n                    videoList:[],\r\n                },\r\n                introVideo:{\r\n                    photo:links.thumbnail,\r\n                    video:links.video\r\n                },\r\n                bio:bio,\r\n                firstName:name.firstName,\r\n                lastName:name.lastName,\r\n                email:email,\r\n                addedBy:{\r\n                    id:'manual_entry_by_saatvik',\r\n                    name:{\r\n                        firstName:\"Saatvik\",\r\n                        secondName:\"Bhatnagar\"\r\n                    }\r\n                },\r\n                categories:selectedCategory,\r\n                filters: selectedFilter,\r\n                keywords:selectedKeyword,\r\n            }\r\n            console.log(guruObj);\r\n            const fetchOptions = {\r\n                method: \"POST\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\"\r\n                },\r\n                body: JSON.stringify(guruObj),\r\n            }\r\n            fetch(\"https://j6lw75i817.execute-api.us-east-2.amazonaws.com/v1/gurus\",fetchOptions).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            })\r\n            .then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(resObj=>{\r\n                onUploadComplete(4);\r\n                setName({firstName:\"\",lastName:\"\"});\r\n                setEmail(\"\");\r\n                setBio(\"\");\r\n                setSelectedCategory(null);\r\n                setSelectedFilter(null);\r\n                setSelectedKeyword(null);\r\n                setProfilePreview({\r\n                    image:null,\r\n                    name:null,\r\n                    size:null,\r\n                });\r\n                setThumbnailPreview({\r\n                    image:null,\r\n                    name:null,\r\n                    size:null,\r\n                });\r\n                setVideoPreview({\r\n                    image:null,\r\n                    name:null,\r\n                    size:null,\r\n                });\r\n                setLinks({\r\n                    profile:\"\",\r\n                    thumbnail:\"\",\r\n                    video:\"\",\r\n                })\r\n                document.getElementById(\"guru-profile\").value=\"\";\r\n                document.getElementById(\"guru-intro-video\").value=\"\";\r\n                document.getElementById(\"guru-intro-thumbnail\").value=\"\";\r\n                setUploading((prev)=>{\r\n                    return {...prev,whole:false}\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast1} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast2} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast3} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast4} position=\"bottom-right\"></Toast>\r\n            {auth.user&&auth.idToken?\r\n                !loading.category && !loading.filter && !loading.keyword ? \r\n                <>\r\n                    <Banner title=\"Add New Guru\"/>\r\n                    <Container>\r\n                        <Row className=\"justify-content-center\">\r\n                        <Col lg={10} xs={12}>\r\n                            <div className=\"rounded p-4 shadow\">\r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                <Form>\r\n                                    <Row>\r\n                                    <Col md={6}>\r\n                                        <FormGroup>\r\n                                        <Label>\r\n                                            Guru Name <span className=\"text-danger\">*</span>\r\n                                        </Label>\r\n                                        <div className=\"position-relative\">\r\n                                            <i>\r\n                                            <FeatherIcon\r\n                                                icon=\"user\"\r\n                                                className=\"fea icon-sm icons\"\r\n                                            />\r\n                                            </i>\r\n                                        </div>\r\n                                        <Input\r\n                                            name=\"name\"\r\n                                            id=\"name\"\r\n                                            type=\"text\"\r\n                                            className=\"form-control pl-5\"\r\n                                            placeholder=\"First Name :\"\r\n                                            value={name.firstName}\r\n                                            onChange={(event)=>{\r\n                                                setName((prev)=>{\r\n                                                    return {...prev,firstName:event.target.value}\r\n                                                })\r\n                                            }}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <FormGroup>\r\n                                        <Label></Label>\r\n                                        <Input\r\n                                            name=\"lastName\"\r\n                                            id=\"lastName\"\r\n                                            type=\"text\"\r\n                                            className=\"form-control pl-3 mt-2\"\r\n                                            placeholder=\"Last Name :\"\r\n                                            value={name.lastName}\r\n                                            onChange={(event)=>{\r\n                                                setName((prev)=>{\r\n                                                    return {...prev,lastName:event.target.value}\r\n                                                })\r\n                                            }}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={12}>\r\n                                        <FormGroup>\r\n                                        <Label>\r\n                                            Email{' '}\r\n                                            <span className=\"text-danger\">*</span>\r\n                                        </Label>\r\n                                        <div className=\"position-relative\">\r\n                                            <i>\r\n                                            <FeatherIcon\r\n                                                icon=\"mail\"\r\n                                                className=\"fea icon-sm icons\"\r\n                                            />\r\n                                            </i>\r\n                                        </div>\r\n                                        <Input\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            type=\"email\"\r\n                                            className=\"form-control pl-5\"\r\n                                            placeholder=\"Your email :\"\r\n                                            value={email}\r\n                                            onChange={(event)=>{\r\n                                                setEmail(event.target.value)\r\n                                            }}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={12}>\r\n                                        <FormGroup>\r\n                                        <Label>\r\n                                            Bio <span className=\"text-danger\">*</span>{' '}\r\n                                        </Label>\r\n                                        <div className=\"position-relative\">\r\n                                            <i>\r\n                                            <FeatherIcon\r\n                                                icon=\"info\"\r\n                                                className=\"fea icon-sm icons\"\r\n                                            />\r\n                                            </i>\r\n                                        </div>\r\n                                        <textarea\r\n                                            name=\"comments\"\r\n                                            id=\"comments\"\r\n                                            rows=\"4\"\r\n                                            className=\"form-control bio-textarea pl-5\"\r\n                                            value={bio}\r\n                                            onChange={(event)=>{\r\n                                                setBio(event.target.value);\r\n                                            }}\r\n                                        ></textarea>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={12}>\r\n                                            <FormGroup className=\"multiselect-container\">\r\n                                                <Label>\r\n                                                    Select Categories<span className=\"text-danger\">*</span>{' '}\r\n                                                </Label>\r\n                                                <MultiSelect value={selectedCategory} options={categories}  onChange={(e) => setSelectedCategory(e.value)} optionLabel=\"name\" placeholder=\"\" filter className=\"multiselect-custom\" itemTemplate={itemTemplate} selectedItemTemplate={itemTemplate} />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={12}>\r\n                                            <FormGroup className=\"multiselect-container\">\r\n                                                <Label>\r\n                                                    Select Filters<span className=\"text-danger\">*</span>{' '}\r\n                                                </Label>\r\n                                                <MultiSelect value={selectedFilter} options={filters}  onChange={(e) => {\r\n                                                    setSelectedFilter(e.value)}} optionLabel=\"name\" placeholder=\"\" filter className=\"multiselect-custom\" itemTemplate={itemTemplate} selectedItemTemplate={itemTemplate} />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={12}>\r\n                                            <FormGroup className=\"multiselect-container\">\r\n                                                <Label>\r\n                                                    Select Keywords<span className=\"text-danger\">*</span>{' '}\r\n                                                </Label>\r\n                                                <MultiSelect value={selectedKeyword} options={keywords}  onChange={(e) => {\r\n                                                    setSelectedKeyword(e.value)}} optionLabel=\"name\" placeholder=\"\" filter className=\"multiselect-custom\" itemTemplate={itemTemplate} selectedItemTemplate={itemTemplate} />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={12}>\r\n                                            <FormGroup className=\"upload-container\">\r\n                                                <Label>\r\n                                                    Profile Photo<span className=\"text-danger\">*</span>{' '}\r\n                                                </Label>\r\n                                                <input id=\"guru-profile\" onChange={handleChangeProfile} type=\"file\"/>\r\n                                                <div className=\"preview-container\">\r\n                                                    {!profilePreview.image?<h5>Select a file to upload</h5>:\r\n                                                    <div className=\"preview-bar\">\r\n                                                        <img src={profilePreview.image} className=\"preview-img\" alt=\"preview\"/>\r\n                                                        <h6>{profilePreview.name}</h6>\r\n                                                        <h6>{`${profilePreview.size} kb`}</h6>\r\n                                                        <button onClick={()=>{\r\n                                                            document.getElementById(\"guru-profile\").value=\"\";\r\n                                                            setProfilePreview({name:null,image:null,size:null});\r\n                                                        }}>\r\n                                                            <FeatherIcon icon=\"x-square\"/>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    \r\n                                                    }\r\n                                                    <div className=\"upload-btn-container\">\r\n                                                        {uploading.profile?<Spinner color=\"black\" className=\"mt-2 ml-3\"/>:<button className=\"upload-btn mt-2\" onClick={uploadHandlerProfile}><FeatherIcon icon=\"upload\"/></button>}\r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                                \r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={12}>\r\n                                            <FormGroup className=\"upload-container\">\r\n                                                <Label>\r\n                                                    Intro Video Thumbnail<span className=\"text-danger\">*</span>{' '}\r\n                                                </Label>\r\n                                                <input id=\"guru-intro-thumbnail\" onChange={handleChangeThumbnail} type=\"file\"/>\r\n                                                <div className=\"preview-container\">\r\n                                                    {!thumbnailPreview.image?<h5>Select a file to upload</h5>:\r\n                                                    <div className=\"preview-bar\">\r\n                                                        <img src={thumbnailPreview.image} className=\"preview-img\" alt=\"preview\"/>\r\n                                                        <h6>{thumbnailPreview.name}</h6>\r\n                                                        <h6>{`${thumbnailPreview.size} kb`}</h6>\r\n                                                        <button onClick={()=>{\r\n                                                            document.getElementById(\"guru-intro-thumbnail\").value=\"\";\r\n                                                            setThumbnailPreview({name:null,image:null,size:null});\r\n                                                        }}>\r\n                                                            <FeatherIcon icon=\"x-square\"/>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    \r\n                                                    }\r\n                                                    <div className=\"upload-btn-container\">\r\n                                                        {uploading.thumbnail?<Spinner color=\"black\" className=\"mt-2 ml-3\"/>:<button className=\"upload-btn mt-2\" onClick={uploadHandlerThumbnail}><FeatherIcon icon=\"upload\"/></button>}\r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={12}>\r\n                                            <FormGroup className=\"upload-container\">\r\n                                                <Label>\r\n                                                    Intro Video<span className=\"text-danger\">*</span>{' '}\r\n                                                </Label>\r\n                                                <input id=\"guru-intro-video\" onChange={handleChangeVideo} type=\"file\"/>\r\n                                                <div className=\"preview-video-container\">\r\n                                                    {!videoPreview.image?<h5>Select a file to upload</h5>:\r\n                                                    <div className=\"preview-bar\">\r\n                                                        <video src={videoPreview.image} className=\"preview-video\" controls/>\r\n                                                        <h6>{videoPreview.name}</h6>\r\n                                                        <h6>{`${videoPreview.size} kb`}</h6>\r\n                                                        <button onClick={()=>{\r\n                                                            document.getElementById(\"guru-intro-video\").value=\"\";\r\n                                                            setVideoPreview({name:null,image:null,size:null});\r\n                                                        }}>\r\n                                                            <FeatherIcon icon=\"x-square\"/>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    \r\n                                                    }\r\n                                                    <div className=\"upload-btn-container\">\r\n                                                        {uploading.video?<Spinner color=\"black\" className=\"mt-2 ml-3\"/>:<button className=\"upload-btn mt-2\" onClick={uploadHandlerVideo}><FeatherIcon icon=\"upload\"/></button>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                    <Col sm={12}>\r\n                                        {uploading.whole?\r\n                                            <Spinner color=\"#ff5001\"></Spinner>\r\n                                            :\r\n                                            <input\r\n                                            type=\"submit\"\r\n                                            id=\"submit\"\r\n                                            name=\"send\"\r\n                                            className=\"touch-btn\"\r\n                                            value=\"Add\"\r\n                                            onClick={handleAdd}\r\n                                            />\r\n                                        }\r\n                                    </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                                </Col>\r\n                            </Row>\r\n                            </div>\r\n                        </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </>\r\n                :\r\n                <div className=\"loader-container\">\r\n                    <div id=\"preloader\">\r\n                        <div id=\"status\">\r\n                        <div className=\"spinner\">\r\n                            <div className=\"double-bounce1\" />\r\n                            <div className=\"double-bounce2\" />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Unauthorized/>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewGuru\r\n","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addNewVideo\\addNewVideo.js",["156","157","158","159","160","161"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport {\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormGroup,\r\n    Row,\r\n    Spinner,\r\n    Label,\r\n    Input,\r\n    Card,\r\n    CardBody\r\n} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport { Toast } from 'primereact/toast';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {InputNumber} from \"primereact/inputnumber\";\r\nimport { TabView, TabPanel } from 'primereact/tabview';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport Banner from '../Layout/Banner/Banner';\r\nimport \"../addNewGuru/style.css\";\r\nimport \"./style.css\";\r\nimport {useSelector} from \"react-redux\"\r\nimport Unauthorized from '../Unauthorized/Unauthorized';\r\nfunction AddNewVideo() {\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const toast = useRef(null);\r\n    const toast1 = useRef(null);\r\n    const toast2 = useRef(null);\r\n    const toast3 = useRef(null);\r\n    const auth = useSelector(state => state.auth)\r\n    const [guruObj,setGuruObj] = useState(null);\r\n    const [duration,setDuration] = useState(2);\r\n    const [id,setId] = useState(\"e7631a2a-8a3b-48cc-9b3f-5d224bae974a\");\r\n    const [title,setTitle] = useState(\"\");\r\n    const [thumbnailString,setThumbnailString] = useState(\"\");\r\n    const [videoString,setVideoString] = useState(\"\");\r\n    const [activeIndex,setActiveIndex] = useState(0);\r\n    const [links,setLinks] = useState({\r\n        thumbnail:\"\",\r\n        video:\"\",\r\n    })\r\n    const [thumbnailPreview,setThumbnailPreview] = useState({\r\n        image:null,\r\n        name:null,\r\n        size:null,\r\n    });\r\n    const [videoPreview,setVideoPreview] = useState({\r\n        image:null,\r\n        name:null,\r\n        size:null,\r\n    });\r\n    const [loading,setLoading] = useState(true);\r\n    const [uploading,setUploading] = useState({profile:false,thumbnail:false,video:false,whole:false});\r\n    const fetchGuru = async()=>{\r\n        setLoading(true);\r\n        const guruId = await query.get(\"id\");\r\n        fetch(`https://j6lw75i817.execute-api.us-east-2.amazonaws.com/v1/gurus/${guruId}`).then(response=>{\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        }).then(jsonResponse=>{\r\n            return jsonResponse;\r\n        })\r\n        .then(result=>{\r\n            setGuruObj(result.body);\r\n            setLoading(false);\r\n        }).catch(error=>{\r\n            console.log(error);\r\n        });\r\n    }\r\n    useEffect(()=>{\r\n        fetchGuru();\r\n    },[])\r\n    const onUploadComplete = (type) => {\r\n        if(type===1){\r\n            toast.current.show({severity: 'success', summary: 'Success', detail: 'The intro video was uploaded'});\r\n        }\r\n        else if(type===2){\r\n            toast1.current.show({severity: 'success', summary: 'Success', detail: 'The intro video thumbnail was uploaded'});\r\n        }\r\n        else if (type===3){\r\n            toast3.current.show({severity: 'success', summary: 'Success', detail: 'The video was added successfully'})\r\n        }\r\n    }\r\n    const checkValidations = () =>{\r\n        if(title!==\"\"&&duration!==0&&links.thumbnail!==\"\"&&links.video!==\"\"){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    const uploadHandlerThumbnail = (event)=>{\r\n        setUploading((prev)=>{\r\n            return {...prev,thumbnail:true}\r\n        })\r\n        const guruName = guruObj.firstName+\" \"+guruObj.lastName;\r\n        const guruId = query.get(\"id\");\r\n        const fetchOptions = {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: JSON.stringify({guruName:guruName,guruID:guruId,videoID:guruObj.techniqueVideos.videoID,type:\"thumbnail\",timeStamp:~~(+new Date() / 1000)}),\r\n\t\t};\r\n        fetch(\"https://5hsr4euhfe.execute-api.us-east-2.amazonaws.com/dev/uploadProfile\",fetchOptions).then(response=>{\r\n            if(response.ok){\r\n            return response.json();\r\n            }\r\n        })\r\n        .then(jsonResponse=>{\r\n            return jsonResponse;\r\n        })\r\n        .then(async (resObj)=>{\r\n            let binary = atob(thumbnailString.split(\",\")[1])\r\n            let blobArray=[];\r\n            for(let i=0;i<binary.length;i++){\r\n                blobArray.push(binary.charCodeAt(i))\r\n            }\r\n            let blobData = new Blob([new Uint8Array(blobArray)],{type:'image/jpeg'});\r\n            const result = await fetch(resObj.uploadURL,{method:\"PUT\",body:blobData});\r\n            setUploading((prev)=>{\r\n                return {...prev,thumbnail:false}\r\n            })\r\n            setLinks((prev)=>{\r\n                return {...prev,thumbnail:resObj.uploadURL.split(\"?\")[0]}\r\n            })\r\n            onUploadComplete(2);\r\n        \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n    }\r\n    const uploadHandlerVideo = (event)=>{\r\n        setUploading((prev)=>{\r\n            return {...prev,video:true}\r\n        })\r\n        const guruName=guruObj.firstName+\" \"+guruObj.lastName;\r\n        const guruId = query.get(\"id\");\r\n        console.log(guruId);\r\n        const fetchOptions = {\r\n            method: \"POST\",\r\n            body: JSON.stringify({guruName:guruName,guruID:guruId,videoID:guruObj.techniqueVideos.videoID,type:\"normal\",timeStamp:~~(+new Date() / 1000)}),\r\n        };\r\n        fetch(\"https://5hsr4euhfe.execute-api.us-east-2.amazonaws.com/dev/uploadVideo\",fetchOptions).then(response=>{\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        })\r\n        .then(jsonResponse=>{\r\n            return jsonResponse;\r\n        })\r\n        .then(async (resObj)=>{\r\n            let binary = atob(videoString.split(\",\")[1])\r\n            let blobArray=[];\r\n            for(let i=0;i<binary.length;i++){\r\n                blobArray.push(binary.charCodeAt(i))\r\n            }\r\n            let blobData = new Blob([new Uint8Array(blobArray)],{type:'video/mp4'});\r\n            const result = await fetch(resObj.uploadURL,{method:\"PUT\",body:blobData});\r\n            setUploading((prev)=>{\r\n                return {...prev,video:false}\r\n            })\r\n            setLinks((prev)=>{\r\n                return {...prev,video:resObj.uploadURL.split(\"?\")[0]}\r\n            })\r\n            console.log(resObj.uploadURL.split(\"?\")[0]);\r\n            onUploadComplete(1);\r\n        \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n    }\r\n    const handleChangeThumbnail = (event) =>{\r\n        const file = document.getElementById(\"guru-intro-thumbnail\").files[0];\r\n        if(file){\r\n            let reader = new FileReader();\r\n            reader.onload = (e)=>{\r\n                if (!e.target.result.includes('data:image/jpeg')) {\r\n                    alert('Wrong file type - JPEG only.')\r\n                }\r\n                else{\r\n                    setThumbnailPreview((prev)=>{\r\n                        return {image:URL.createObjectURL(event.target.files[0]),name:event.target.files[0].name,size:Math.round(event.target.files[0].size/1024)}\r\n                    })\r\n                    setThumbnailString(e.target.result);\r\n                }\r\n            } \r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    const handleChangeVideo = (event) =>{\r\n        const file = document.getElementById(\"guru-intro-video\").files[0];\r\n        if(file){\r\n            let reader = new FileReader();\r\n            reader.onload = (e)=>{\r\n                if (!e.target.result.includes('data:video/mp4')) {\r\n                    alert('Wrong file type - MP4 only.')\r\n                }\r\n                else{\r\n                    setVideoPreview((prev)=>{\r\n                        return {image:URL.createObjectURL(event.target.files[0]),name:event.target.files[0].name,size:Math.round(event.target.files[0].size/1024)}\r\n                    })\r\n                    setVideoString(e.target.result);\r\n                }\r\n            } \r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    const handleAdd = async(event)=>{\r\n        event.preventDefault();\r\n        \r\n        const valid = checkValidations();\r\n        if(!valid){\r\n            toast2.current.show({severity: 'error', summary: 'All fields are mandatory', detail: 'Please check that all fields are completely filled'});\r\n        }\r\n        else{\r\n            setUploading((prev)=>{\r\n                return {...prev,whole:true}\r\n            })\r\n            const videoList = guruObj.techniqueVideos.videoList;\r\n            let videoObj = {\r\n                title:title,\r\n                duration:duration,\r\n                thumbnail:links.thumbnail,\r\n                video:links.video\r\n            }\r\n            videoList.push(videoObj);\r\n            const fetchOptions = {\r\n                method: \"PUT\",\r\n                headers:{\r\n                \"Content-Type\":\"application/json\"\r\n                },\r\n                body: JSON.stringify({techniqueVideos:{\r\n                    videoID:guruObj.techniqueVideos.videoID+1,\r\n                    videoList:videoList\r\n                }}),\r\n            }\r\n            const guruId = await query.get(\"id\");\r\n            fetch(`https://j6lw75i817.execute-api.us-east-2.amazonaws.com/v1/gurus/${guruId}`,fetchOptions).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            })\r\n            .then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(resObj=>{\r\n                onUploadComplete(4);\r\n                setTitle(\"\");\r\n                setThumbnailPreview({\r\n                    image:null,\r\n                    name:null,\r\n                    size:null,\r\n                });\r\n                setVideoPreview({\r\n                    image:null,\r\n                    name:null,\r\n                    size:null,\r\n                });\r\n                setLinks({\r\n                    thumbnail:\"\",\r\n                    video:\"\",\r\n                })\r\n                document.getElementById(\"guru-intro-video\").value=\"\";\r\n                document.getElementById(\"guru-intro-thumbnail\").value=\"\";\r\n                setUploading((prev)=>{\r\n                    return {...prev,whole:false}\r\n                })\r\n                window.scroll({top: 0, left: 0, behavior: 'smooth' });\r\n                onUploadComplete(3);\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast1} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast2} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast2} position=\"bottom-right\"></Toast>\r\n            {auth.idToken?\r\n                !loading ? \r\n                <>\r\n                    <TabView activeIndex={activeIndex} onTabChange={(e)=>{\r\n                        if(e.index===1){\r\n                            fetchGuru();\r\n                        }\r\n                        setActiveIndex(e.index);\r\n                    }}>\r\n                        <TabPanel header=\"Add Video\">\r\n                            <Banner title=\"Add New Video\"/>\r\n                            <Container>\r\n                                <Row className=\"justify-content-center\">\r\n                                <Col lg={10} xs={12}>\r\n                                    <div className=\"rounded p-4 shadow\">\r\n                                    <Row>\r\n                                        <Col xs={12}>\r\n                                        <Form>\r\n                                            <Row>\r\n                                                <Col md={6}>\r\n                                                    <FormGroup>\r\n                                                    <Label>\r\n                                                        Video title <span className=\"text-danger\">*</span>\r\n                                                    </Label>\r\n                                                    <div className=\"position-relative\">\r\n                                                        <i>\r\n                                                        <FeatherIcon\r\n                                                            icon=\"user\"\r\n                                                            className=\"fea icon-sm icons\"\r\n                                                        />\r\n                                                        </i>\r\n                                                    </div>\r\n                                                    <Input\r\n                                                        name=\"name\"\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control pl-5\"\r\n                                                        placeholder=\"Title\"\r\n                                                        value={title}\r\n                                                        onChange={(event)=>{\r\n                                                            setTitle(event.target.value);\r\n                                                        }}\r\n                                                    />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md={6}>\r\n                                                    <FormGroup>\r\n                                                    <Label>\r\n                                                        Duration <span className=\"text-danger\">*</span>\r\n                                                    </Label>\r\n                                                    <div className=\"position-relative\">\r\n                                                        \r\n                                                    </div>\r\n                                                    <InputNumber id=\"duration\" value={duration} showButtons buttonLayout=\"horizontal\" step={1} decrementButtonClassName=\"p-button-danger\" incrementButtonClassName=\"p-button-success\" incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\" onValueChange={(e) => setDuration(e.value)} suffix=\" minutes\" />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup className=\"upload-container\">\r\n                                                        <Label>\r\n                                                            Video Thumbnail<span className=\"text-danger\">*</span>{' '}\r\n                                                        </Label>\r\n                                                        <input id=\"guru-intro-thumbnail\" onChange={handleChangeThumbnail} type=\"file\"/>\r\n                                                        <div className=\"preview-container\">\r\n                                                            {!thumbnailPreview.image?<h5>Select a file to upload</h5>:\r\n                                                            <div className=\"preview-bar\">\r\n                                                                <img src={thumbnailPreview.image} className=\"preview-img\" alt=\"preview\"/>\r\n                                                                <h6>{thumbnailPreview.name}</h6>\r\n                                                                <h6>{`${thumbnailPreview.size} kb`}</h6>\r\n                                                                <button onClick={()=>{\r\n                                                                    document.getElementById(\"guru-intro-thumbnail\").value=\"\";\r\n                                                                    setThumbnailPreview({name:null,image:null,size:null});\r\n                                                                }}>\r\n                                                                    <FeatherIcon icon=\"x-square\"/>\r\n                                                                </button>\r\n                                                            </div>\r\n                                                            \r\n                                                            }\r\n                                                            <div className=\"upload-btn-container\">\r\n                                                                {uploading.thumbnail?<Spinner color=\"black\" className=\"mt-2 ml-3\"/>:<button className=\"upload-btn mt-2\" onClick={uploadHandlerThumbnail}><FeatherIcon icon=\"upload\"/></button>}\r\n                                                            </div>\r\n                                                        </div>\r\n    \r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup className=\"upload-container\">\r\n                                                        <Label>\r\n                                                            Intro Video<span className=\"text-danger\">*</span>{' '}\r\n                                                        </Label>\r\n                                                        <input id=\"guru-intro-video\" onChange={handleChangeVideo} type=\"file\"/>\r\n                                                        <div className=\"preview-video-container\">\r\n                                                            {!videoPreview.image?<h5>Select a file to upload</h5>:\r\n                                                            <div className=\"preview-bar\">\r\n                                                                <video src={videoPreview.image} className=\"preview-video\" controls/>\r\n                                                                <h6>{videoPreview.name}</h6>\r\n                                                                <h6>{`${videoPreview.size} kb`}</h6>\r\n                                                                <button onClick={()=>{\r\n                                                                    document.getElementById(\"guru-intro-video\").value=\"\";\r\n                                                                    setVideoPreview({name:null,image:null,size:null});\r\n                                                                }}>\r\n                                                                    <FeatherIcon icon=\"x-square\"/>\r\n                                                                </button>\r\n                                                            </div>\r\n                                                            \r\n                                                            }\r\n                                                            <div className=\"upload-btn-container\">\r\n                                                                {uploading.video?<Spinner color=\"black\" className=\"mt-2 ml-3\"/>:<button className=\"upload-btn mt-2\" onClick={uploadHandlerVideo}><FeatherIcon icon=\"upload\"/></button>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                            <Col sm={12}>\r\n                                                {uploading.whole?\r\n                                                    <Spinner color=\"#ff5001\"></Spinner>\r\n                                                    :\r\n                                                    <input\r\n                                                    type=\"submit\"\r\n                                                    id=\"submit\"\r\n                                                    name=\"send\"\r\n                                                    className=\"touch-btn\"\r\n                                                    value=\"Add\"\r\n                                                    onClick={handleAdd}\r\n                                                    />\r\n                                                }\r\n                                                \r\n                                            </Col>\r\n                                            </Row>\r\n                                        </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    </div>\r\n                                </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </TabPanel>\r\n                        <TabPanel header = \"View Videos\">\r\n                            <Container>\r\n                                <Row>\r\n                                {guruObj.techniqueVideos.videoList.length>0 ?\r\n                                    guruObj.techniqueVideos.videoList.map((video, key) =>\r\n                                        key % 2 === 0 ? (\r\n                                        <Col lg={6} xs={12} key={key} className=\"mb-4 pb-2\">\r\n                                            <Card className=\"blog rounded border-0 shadow overflow-hidden\">\r\n                                            <Row className=\"align-items-center no-gutters\">\r\n                                                <Col md={6}>\r\n                                                <img\r\n                                                    src={video.thumbnail}\r\n                                                    className=\"img-fluid\"\r\n                                                    alt=\"thumbnail\"\r\n                                                />\r\n                                                </Col>\r\n    \r\n                                                <Col md={6}>\r\n                                                <CardBody className=\"content\">\r\n                                                    <h5>\r\n                                                    <a\r\n                                                        href={video.video}\r\n                                                        rel=\"noreferrer\"\r\n                                                        target=\"_blank\"\r\n                                                        className=\"card-title title text-dark\"\r\n                                                    >\r\n                                                        {video.title}\r\n                                                    </a>\r\n                                                    </h5>\r\n                                                    \r\n                                                    <div className=\"post-meta d-flex justify-content-between mt-3\">\r\n                                                    <ul className=\"list-unstyled mb-0\">\r\n                                                        <li className=\"list-inline-item mr-2 mb-0\">\r\n                                                            <i className=\"mr-2\">\r\n                                                                <FeatherIcon icon=\"clock\"/>\r\n                                                            </i>\r\n                                                            {`${video.duration} mins`}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <a\r\n                                                        href={video.video}\r\n                                                        rel=\"noreferrer\"\r\n                                                        target=\"_blank\"\r\n                                                        className=\"text-muted readmore\"\r\n                                                    >\r\n                                                        Watch{\" \"}\r\n                                                        <i>\r\n                                                            <FeatherIcon icon=\"chevron-right\"/>\r\n                                                        </i>\r\n                                                    </a>\r\n                                                    </div>\r\n                                                </CardBody>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            </Card>\r\n                                        </Col>\r\n                                        ) : (\r\n                                        <Col lg={6} xs={12} key={key} className=\"mb-4 pb-2\">\r\n                                            <Card className=\"blog rounded border-0 shadow overflow-hidden\">\r\n                                            <Row className=\"align-items-center no-gutters\">\r\n                                                <Col md={{ size: 6, order: 1 }} xs={{ order: 2 }}>\r\n                                                <CardBody className=\"content\">\r\n                                                    <h5>\r\n                                                    <a\r\n                                                        href={video.video}\r\n                                                        rel=\"noreferrer\"\r\n                                                        target=\"_blank\"\r\n                                                        className=\"card-title title text-dark\"\r\n                                                    >\r\n                                                        {video.title}\r\n                                                    </a>\r\n                                                    </h5>\r\n                                                    \r\n                                                    <div className=\"post-meta d-flex justify-content-between mt-3\">\r\n                                                    <ul className=\"list-unstyled mb-0\">\r\n                                                        <li className=\"list-inline-item mr-2 mb-0\">\r\n                                                            <i className=\"mr-2\">\r\n                                                                <FeatherIcon icon=\"clock\"/>\r\n                                                            </i>\r\n                                                            {`${video.duration} mins`}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <a\r\n                                                        href={video.video}\r\n                                                        rel=\"noreferrer\"\r\n                                                        target=\"_blank\"\r\n                                                        className=\"text-muted readmore\"\r\n                                                    >\r\n                                                        Watch{\" \"}\r\n                                                        <i>\r\n                                                            <FeatherIcon icon=\"chevron-right\"/>\r\n                                                        </i>\r\n                                                    </a>\r\n                                                    </div>\r\n                                                </CardBody>\r\n                                                </Col>\r\n                                                <Col md={{ size: 6, order: 2 }} xs={{ order: 1 }}>\r\n                                                <img\r\n                                                    src={video.thumbnail}\r\n                                                    className=\"img-fluid\"\r\n                                                    alt=\"thumbnail\"\r\n                                                />\r\n                                                </Col>\r\n                                            </Row>\r\n                                            </Card>\r\n                                        </Col>\r\n                                        )):\r\n                                        <div className=\"no-video-container\">\r\n                                            <h3>There are no technique videos</h3>\r\n                                        </div>\r\n                                }\r\n                                </Row>\r\n                            </Container>\r\n                        </TabPanel>\r\n                    </TabView>\r\n                    \r\n                </>\r\n                :\r\n                <div className=\"loader-container\">\r\n                    <div id=\"preloader\">\r\n                        <div id=\"status\">\r\n                        <div className=\"spinner\">\r\n                            <div className=\"double-bounce1\" />\r\n                            <div className=\"double-bounce2\" />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Unauthorized/>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewVideo\r\n","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addFilter\\addFilter.js",["162"],"import React,{useEffect, useRef, useState} from 'react'\r\nimport {ListBox} from \"primereact/listbox\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from \"primereact/button\";\r\nimport Banner from '../Layout/Banner/Banner';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Container,Row,Col,Spinner} from 'reactstrap';\r\nimport {useSelector} from \"react-redux\";\r\nimport \"./style.css\";\r\nimport Unauthorized from '../Unauthorized/Unauthorized';\r\nfunction AddFilter() {\r\n    const toast = useRef(null);\r\n    const toast1 = useRef(null);\r\n    const auth = useSelector(state => state.auth);\r\n    const [filter,setFilters] = useState([]);\r\n    const [loading,setLoading] = useState(true);\r\n    const [fetching,setFetching] = useState(false);\r\n    const [inProgress,setInProgress] = useState(false);\r\n    const [name,setName] = useState(\"\");\r\n    const showSuccess = () => {\r\n        toast.current.show({severity:'success', summary: 'Category added', detail:`${name} has been added`, life: 3000});\r\n    }\r\n    const showError = () => {\r\n        toast1.current.show({severity:'error', summary: 'Failed to add', detail:'Please try again with a different name', life: 3000});\r\n    }\r\n    const fetchFilters = ()=>{\r\n        if(!loading){\r\n            setFetching(true);\r\n        }\r\n        fetch(`https://1qpe25db41.execute-api.us-east-2.amazonaws.com/v1/filter`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setFilters(result.body);\r\n                if(loading){\r\n                    setLoading(false);\r\n                }\r\n                setFetching(false);\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    useEffect(()=>{\r\n        fetchFilters();\r\n    },[]);\r\n    const itemTemplate = (option) => {\r\n        return (\r\n            <h5 id={option.ID}>{option.name}</h5>\r\n        );\r\n    }\r\n    const handleAdd = ()=>{\r\n        setInProgress(true);\r\n        const fetchOptions = {\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({name:name})\r\n        }\r\n        fetch(`https://1qpe25db41.execute-api.us-east-2.amazonaws.com/v1/filter`,fetchOptions).then(response=>{\r\n            if(response.statusCode===200){\r\n                return response.json();\r\n            }\r\n            else{\r\n                showError();\r\n            }\r\n        }).then(jsonResponse=>{\r\n            return jsonResponse;\r\n        }).then(()=>{\r\n            setInProgress(false);\r\n            showSuccess();\r\n            setName(\"\");\r\n            fetchFilters();\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} position=\"bottom-right\" />\r\n            <Toast ref={toast1} position=\"bottom-right\" />\r\n            {auth.idToken?\r\n            loading?\r\n                <div className=\"loader-container\">\r\n                    <div id=\"preloader\">\r\n                        <div id=\"status\">\r\n                        <div className=\"spinner\">\r\n                            <div className=\"double-bounce1\" />\r\n                            <div className=\"double-bounce2\" />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <>\r\n                    <Banner title=\"Add EA Filter\"/>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={6} className=\"left-container\">\r\n                            {fetching?\r\n                            <>\r\n                                <Spinner color=\"primary\"/>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <h3 className=\"left-heading\">Filters</h3>\r\n                                <ListBox options={filter} filter optionLabel=\"name\"\r\n                                    itemTemplate={itemTemplate} className=\"category-list\" />\r\n                            </>}\r\n                            \r\n                            </Col>\r\n                            <Col md={6} className=\"right-container\">\r\n                            <h4 className=\"left-heading\">Add new EA filter</h4>\r\n                            <div className=\"p-inputgroup\">\r\n                                <InputText placeholder=\"Enter Name\" id=\"filter-name\" onChange={(event)=>{\r\n                                    setName(event.target.value);\r\n                                }} value={name}/>\r\n                                {inProgress?<Spinner color=\"primary\"/>:<Button label=\"Add\" onClick={handleAdd}/>}\r\n                            </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </>\r\n            :\r\n            <Unauthorized/>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFilter\r\n","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\routes.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\Layout.jsx",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\TopNavBar\\TopNavBar.jsx",["163","164"],"import React, {useState } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { withRouter,useHistory } from 'react-router';\r\nimport { Button, Container } from 'reactstrap';\r\nimport logo from '../../../assets/images/logo.png';\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {logoutAction} from \"../../../Store/ActionCreators/auth\";\r\nfunction Topbar (){\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [navLinks,setNavLinks] = useState ([\r\n    { id: 1, title: 'Add New Guru', link: '/add-new-guru' },\r\n    { id: 2, title: 'View All Gurus', link: '/view-all-guru' },\r\n    { id: 3, title: 'Categories', link: '/add-category' },\r\n    { id: 4, title: 'Keywords', link: '/add-keyword' },\r\n    { id: 5, title: 'EA Filters', link: '/add-filter' },\r\n  ]);\r\n  const [isOpen,setIsOpen] = useState(false);\r\n  const toggleLine = ()=>{\r\n    setIsOpen(!isOpen);\r\n  }\r\n  const handleLogout = ()=>{\r\n    dispatch(logoutAction()).then(()=>{\r\n      history.push(\"/\");\r\n    })\r\n  }\r\n    return (\r\n      <React.Fragment>\r\n        <header id=\"topnav\" className=\"defaultscroll sticky\">\r\n          <Container>\r\n            <div>\r\n              <Link\r\n                className={'logo'}\r\n                to=\"/\"\r\n              >\r\n                <img\r\n                  src={logo}\r\n                  id=\"brandLogo\"\r\n                  height=\"50\"\r\n                  alt=\"Reset MSM Logo\"\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div className=\"menu-extras\">\r\n              <div className=\"menu-item\">\r\n                <Link\r\n                  to=\"#\"\r\n                  onClick={toggleLine}\r\n                  className={\r\n                    isOpen ? 'navbar-toggle open' : 'navbar-toggle'\r\n                  }\r\n                >\r\n                  <div className=\"lines\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              id=\"navigation\"\r\n              style={{ display: isOpen ? 'block' : 'none' }}\r\n            >\r\n              <ul\r\n                className='navigation-menu nav-light'\r\n                id=\"top-menu\"\r\n              >\r\n                {navLinks?navLinks.map((navLink, key) =>\r\n                  <li key={key}>\r\n                    <Link to={navLink.link}>{navLink.title}</Link>\r\n                  </li>\r\n                ):null}\r\n                <li className=\"button-container\">\r\n                  {auth.idToken?\r\n                    <Button color=\"primary\" className=\"signout-btn\" onClick={handleLogout}>Sign Out</Button>\r\n                  :\r\n                    <Button color=\"primary\" className=\"account-btn\" onClick={()=>{\r\n                      history.push(\"/\")\r\n                    }}>Login</Button>\r\n                  }\r\n                  \r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </Container>\r\n        </header>\r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default withRouter(Topbar);\r\n","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\Banner\\Banner.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\config.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\configureStore.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Login\\Login.jsx",["165"],"import React, { useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form } from 'formik';\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  CardBody,\r\n  Card,\r\n  Spinner,\r\n  Alert\r\n} from 'reactstrap';\r\nimport TextInput from './TextInput.jsx';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { loginAction} from '../../Store/ActionCreators/auth';\r\nimport './style.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearAlert, setAlert } from '../../Store/ActionCreators/alert';\r\n\r\nexport default function Login() {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector((state) => state.auth);\r\n    const alert = useSelector((state) => state.alert);\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string().required('Required'),\r\n        password: Yup.string().required('Required')\r\n    });\r\n\r\n    const handleSubmit = async (values) => {\r\n        try {\r\n        await dispatch(loginAction(values.email, values.password));\r\n        } catch (err) {\r\n        alert(err.message);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (!auth.isLoading) {\r\n        if (auth.error !== '') {\r\n            dispatch(setAlert({ message: auth.error, color: 'danger' }));\r\n        } else if (auth.user) {\r\n            dispatch(setAlert({ message: 'Successful login, please change your password', color: 'success' }));\r\n            \r\n        }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        \r\n    }, [auth]);\r\n    if(auth.user){\r\n        if(auth.user.challengeName){\r\n            return <Redirect to=\"/new-admin-login\"/>\r\n        }\r\n        else{\r\n            return <Redirect to=\"/view-all-guru\"/>;\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n        <Container className=\"mb-100 mt-150\">\r\n            {alert.isAlert && (\r\n            <Row className=\"mb-2\">\r\n                <Col xs={12}>\r\n                <Alert color={alert.color}>{alert.msg}</Alert>\r\n                </Col>\r\n            </Row>\r\n            )}\r\n            <Formik\r\n            initialValues={{\r\n                email: '',\r\n                password: ''\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                dispatch(clearAlert());\r\n                if (!auth.isLoading) {\r\n                handleSubmit(values);\r\n                }\r\n            }}\r\n            >\r\n            {(props) => (\r\n                <Container>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col xs={12} md={8} lg={5}>\r\n                    <Card className=\"login-page bg-white shadow rounded border-0\">\r\n                        <CardBody>\r\n                        <h4 className=\"card-title text-center\">Login</h4>\r\n                        <Form>\r\n                            <Row className=\"mt-4 mb-4\">\r\n                            <Col xs={12}>\r\n                                <TextInput\r\n                                label=\"Email/Username\"\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                placeholder=\"Email/Username\"\r\n                                required\r\n                                />\r\n                            </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-4\">\r\n                            <Col xs={12}>\r\n                                <TextInput\r\n                                label=\"Password\"\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                required\r\n                                />\r\n                            </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                    <p className=\"mb-0 mt-2\">\r\n                                    <small className=\"text-primary mr-2\">\r\n                                        <Link to=\"/reset-password\">\r\n                                        Forgot Password?\r\n                                        </Link>\r\n                                    </small>\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-4\">\r\n                                <Col xs={12}>\r\n                                    <Button color=\"primary\" type=\"submit\" block>\r\n                                    {auth.isLoading ? (\r\n                                        <Spinner></Spinner>\r\n                                    ) : (\r\n                                        <>Sign In</>\r\n                                    )}\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n            )}\r\n            </Formik>\r\n        </Container>\r\n        </div>\r\n    );\r\n    }","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\ActionCreators\\alert.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\ActionCreators\\auth.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\ActionTypes.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Login\\TextInput.jsx",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\Reducers\\rootReducer.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\Reducers\\userDetails.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\Reducers\\alert.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\Store\\Reducers\\auth.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Login\\NewAdminLogin.jsx",["166","167"],"import React, { useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form } from 'formik';\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  CardBody,\r\n  Card,\r\n  Alert,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport TextInput from './TextInput';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { newUserLoginAction } from '../../Store/ActionCreators/auth';\r\n\r\nimport './style.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearAlert, setAlert } from '../../Store/ActionCreators/alert';\r\nimport Unauthorized from '../Unauthorized/Unauthorized';\r\nfunction NewAdminLogin() {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector((state) => state.auth);\r\n    const alert = useSelector((state) => state.alert);\r\n    const validationSchema = Yup.object().shape({ \r\n        password: Yup.string()\r\n            .min(8, 'Password has to be longer than 8 characters!')\r\n            .matches(\r\n            /^.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?].*$/,\r\n            'Needs one special character'\r\n            )\r\n            .matches(/[0-9]/, 'Needs one digit')\r\n            .matches(/[a-z]/, 'Needs one lowercase character')\r\n            .matches(/[A-Z]/, 'Needs one uppercase character')\r\n            .required('Required'),\r\n        passwordConfirm: Yup.string()\r\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n            .required('Required')\r\n    });\r\n    const handleSubmit = async (values) => {\r\n        try {\r\n          await dispatch(\r\n            newUserLoginAction(\r\n              auth.user,\r\n              values.password,\r\n            )\r\n          );\r\n        } catch (err) {\r\n          dispatch(setAlert({ message: 'Error', color: 'danger' }));\r\n        }\r\n      };\r\n    if(auth.user&& auth.idToken){\r\n        return <Redirect to=\"/view-all-guru\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            {auth.user?\r\n            <Container className=\"mb-100 mt-150\">\r\n                {alert.isAlert && (\r\n                <Row className=\"mb-2\">\r\n                    <Col xs={12}>\r\n                    <Alert color={alert.color}>{alert.msg}</Alert>\r\n                    </Col>\r\n                </Row>\r\n                )}\r\n                <Formik\r\n                initialValues={{\r\n                    password: '',\r\n                    passwordConfirm: ''\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    dispatch(clearAlert());\r\n                    if (!auth.isLoading) {\r\n                        handleSubmit(values);\r\n                    }\r\n                }}\r\n                >\r\n                {(props) => (\r\n                    <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col xs={12} md={8} lg={6}>\r\n                        <Card className=\"login-page bg-white shadow rounded border-0\">\r\n                            <CardBody>\r\n                            <h4 className=\"card-title text-center\">Change Password<span className=\"danger\">*</span></h4>\r\n                            <Form>\r\n                                <Row className=\"mt-4\">\r\n                                    <Col xs={12}>\r\n                                        <TextInput\r\n                                        label=\"Password\"\r\n                                        placeholder=\"Password\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"mt-4\">\r\n                                    <Col xs={12}>\r\n                                        <TextInput\r\n                                        label=\"Confirm Password\"\r\n                                        name=\"passwordConfirm\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        />\r\n                                    </Col>\r\n                                    <Col xs={12} className=\"mt-2\">\r\n                                        <small className=\"text-dark mr-2\">\r\n                                        <em>\r\n                                            Password must have minimum 8 characters, 1\r\n                                            special character, 1 number & 1 uppercase\r\n                                            character.\r\n                                        </em>\r\n                                        </small>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"mt-4\">\r\n                                <Col xs={12}>\r\n                                    <Button color=\"primary\" type=\"submit\" block>\r\n                                    {auth.isLoading ? (\r\n                                        <Spinner>idk</Spinner>\r\n                                    ) : (\r\n                                        <>Update</>\r\n                                    )}\r\n                                    </Button>\r\n                                </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            </CardBody>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    </Container>\r\n                )}\r\n                </Formik>\r\n            </Container>\r\n            :\r\n            <Unauthorized/>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewAdminLogin\r\n","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Unauthorized\\Unauthorized.jsx",[],{"ruleId":"168","severity":1,"message":"169","line":7,"column":36,"nodeType":"170","messageId":"171","endLine":7,"endColumn":41},{"ruleId":"172","severity":1,"message":"173","line":49,"column":7,"nodeType":"174","endLine":49,"endColumn":9,"suggestions":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"172","severity":1,"message":"180","line":170,"column":7,"nodeType":"174","endLine":170,"endColumn":9,"suggestions":"181"},{"ruleId":"168","severity":1,"message":"182","line":205,"column":19,"nodeType":"170","messageId":"171","endLine":205,"endColumn":25},{"ruleId":"168","severity":1,"message":"182","line":242,"column":19,"nodeType":"170","messageId":"171","endLine":242,"endColumn":25},{"ruleId":"168","severity":1,"message":"182","line":280,"column":19,"nodeType":"170","messageId":"171","endLine":280,"endColumn":25},{"ruleId":"168","severity":1,"message":"183","line":2,"column":50,"nodeType":"170","messageId":"171","endLine":2,"endColumn":55},{"ruleId":"168","severity":1,"message":"184","line":6,"column":10,"nodeType":"170","messageId":"171","endLine":6,"endColumn":21},{"ruleId":"168","severity":1,"message":"185","line":18,"column":11,"nodeType":"170","messageId":"171","endLine":18,"endColumn":16},{"ruleId":"168","severity":1,"message":"186","line":21,"column":11,"nodeType":"170","messageId":"171","endLine":21,"endColumn":17},{"ruleId":"168","severity":1,"message":"187","line":36,"column":12,"nodeType":"170","messageId":"171","endLine":36,"endColumn":14},{"ruleId":"168","severity":1,"message":"188","line":36,"column":15,"nodeType":"170","messageId":"171","endLine":36,"endColumn":20},{"ruleId":"168","severity":1,"message":"189","line":40,"column":22,"nodeType":"170","messageId":"171","endLine":40,"endColumn":34},{"ruleId":"168","severity":1,"message":"190","line":43,"column":11,"nodeType":"170","messageId":"171","endLine":43,"endColumn":13},{"ruleId":"172","severity":1,"message":"191","line":154,"column":7,"nodeType":"174","endLine":154,"endColumn":9,"suggestions":"192"},{"ruleId":"168","severity":1,"message":"193","line":9,"column":3,"nodeType":"170","messageId":"171","endLine":9,"endColumn":13},{"ruleId":"172","severity":1,"message":"194","line":50,"column":5,"nodeType":"174","endLine":50,"endColumn":7,"suggestions":"195"},{"ruleId":"172","severity":1,"message":"173","line":49,"column":7,"nodeType":"174","endLine":49,"endColumn":9,"suggestions":"196"},{"ruleId":"168","severity":1,"message":"197","line":27,"column":16,"nodeType":"170","messageId":"171","endLine":27,"endColumn":24},{"ruleId":"172","severity":1,"message":"194","line":81,"column":5,"nodeType":"174","endLine":81,"endColumn":7,"suggestions":"198"},{"ruleId":"168","severity":1,"message":"182","line":172,"column":19,"nodeType":"170","messageId":"171","endLine":172,"endColumn":25},{"ruleId":"168","severity":1,"message":"182","line":209,"column":19,"nodeType":"170","messageId":"171","endLine":209,"endColumn":25},{"ruleId":"168","severity":1,"message":"182","line":247,"column":19,"nodeType":"170","messageId":"171","endLine":247,"endColumn":25},{"ruleId":"168","severity":1,"message":"199","line":14,"column":9,"nodeType":"170","messageId":"171","endLine":14,"endColumn":13},{"ruleId":"168","severity":1,"message":"187","line":34,"column":12,"nodeType":"170","messageId":"171","endLine":34,"endColumn":14},{"ruleId":"168","severity":1,"message":"188","line":34,"column":15,"nodeType":"170","messageId":"171","endLine":34,"endColumn":20},{"ruleId":"172","severity":1,"message":"200","line":74,"column":7,"nodeType":"174","endLine":74,"endColumn":9,"suggestions":"201"},{"ruleId":"168","severity":1,"message":"182","line":117,"column":19,"nodeType":"170","messageId":"171","endLine":117,"endColumn":25},{"ruleId":"168","severity":1,"message":"182","line":156,"column":19,"nodeType":"170","messageId":"171","endLine":156,"endColumn":25},{"ruleId":"172","severity":1,"message":"202","line":49,"column":7,"nodeType":"174","endLine":49,"endColumn":9,"suggestions":"203"},{"ruleId":"168","severity":1,"message":"204","line":2,"column":16,"nodeType":"170","messageId":"171","endLine":2,"endColumn":23},{"ruleId":"168","severity":1,"message":"205","line":12,"column":19,"nodeType":"170","messageId":"171","endLine":12,"endColumn":30},{"ruleId":"172","severity":1,"message":"194","line":49,"column":8,"nodeType":"174","endLine":49,"endColumn":14,"suggestions":"206"},{"ruleId":"168","severity":1,"message":"207","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"199","line":15,"column":10,"nodeType":"170","messageId":"171","endLine":15,"endColumn":14},"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCategories'. Either include it or remove the dependency array.","ArrayExpression",["208"],"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"React Hook useEffect has missing dependencies: 'fetchGuruData' and 'query'. Either include them or remove the dependency array.",["211"],"'result' is assigned a value but never used.","'Label' is defined but never used.","'InputNumber' is defined but never used.","'query' is assigned a value but never used.","'toast1' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'setUploading' is assigned a value but never used.","'dt' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAvailability'. Either include it or remove the dependency array.",["212"],"'withRouter' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["213"],["214"],"'setGurus' is assigned a value but never used.",["215"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchGuru'. Either include it or remove the dependency array.",["216"],"React Hook useEffect has a missing dependency: 'fetchFilters'. Either include it or remove the dependency array.",["217"],"'NavLink' is defined but never used.","'setNavLinks' is assigned a value but never used.",["218"],"'useEffect' is defined but never used.",{"desc":"219","fix":"220"},"no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"219","fix":"227"},{"desc":"225","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [fetchCategories]",{"range":"235","text":"236"},"Update the dependencies array to be: [fetchGuruData, query]",{"range":"237","text":"238"},"Update the dependencies array to be: [fetchAvailability]",{"range":"239","text":"240"},"Update the dependencies array to be: [dispatch]",{"range":"241","text":"242"},{"range":"243","text":"236"},{"range":"244","text":"242"},"Update the dependencies array to be: [fetchGuru]",{"range":"245","text":"246"},"Update the dependencies array to be: [fetchFilters]",{"range":"247","text":"248"},"Update the dependencies array to be: [auth, dispatch]",{"range":"249","text":"250"},[1943,1945],"[fetchCategories]",[6425,6427],"[fetchGuruData, query]",[6361,6363],"[fetchAvailability]",[1259,1261],"[dispatch]",[1947,1949],[2951,2953],[2486,2488],"[fetchGuru]",[1925,1927],"[fetchFilters]",[1523,1529],"[auth, dispatch]"]