[{"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\reportWebVitals.js":"1","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addKeyword\\addKeyword.js":"2","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\updateGuru\\updateGuru.js":"3","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\Footer\\Footer.jsx":"4","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addAvailability\\addAvailability.js":"5","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\App.js":"6","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\index.js":"7","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addCategory\\addCategory.js":"8","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\viewAllGurus\\viewAllGurus.js":"9","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addNewGuru\\addNewGuru.js":"10","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addNewVideo\\addNewVideo.js":"11","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addFilter\\addFilter.js":"12","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\routes.js":"13","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\Layout.jsx":"14","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\TopNavBar\\TopNavBar.jsx":"15","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\Banner\\Banner.js":"16"},{"size":362,"mtime":1606442108006,"results":"17","hashOfConfig":"18"},{"size":4866,"mtime":1610103969010,"results":"19","hashOfConfig":"20"},{"size":152,"mtime":1610011394246,"results":"21","hashOfConfig":"20"},{"size":5281,"mtime":1610013495628,"results":"22","hashOfConfig":"20"},{"size":16621,"mtime":1610402544129,"results":"23","hashOfConfig":"20"},{"size":1663,"mtime":1610096002018,"results":"24","hashOfConfig":"20"},{"size":319,"mtime":1610014471742,"results":"25","hashOfConfig":"20"},{"size":4876,"mtime":1610104036305,"results":"26","hashOfConfig":"20"},{"size":7128,"mtime":1610028166412,"results":"27","hashOfConfig":"20"},{"size":31275,"mtime":1610287121788,"results":"28","hashOfConfig":"20"},{"size":29574,"mtime":1610398610146,"results":"29","hashOfConfig":"20"},{"size":4875,"mtime":1610104113294,"results":"30","hashOfConfig":"20"},{"size":1244,"mtime":1610028536908,"results":"31","hashOfConfig":"20"},{"size":780,"mtime":1610012749198,"results":"32","hashOfConfig":"20"},{"size":6610,"mtime":1610014518878,"results":"33","hashOfConfig":"20"},{"size":239,"mtime":1610022685160,"results":"34","hashOfConfig":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"545yc0",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"156o7o3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\reportWebVitals.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addKeyword\\addKeyword.js",["73","74"],"import React,{useEffect, useState,useRef} from 'react'\r\nimport {ListBox} from \"primereact/listbox\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Toast } from 'primereact/toast';\r\nimport Banner from '../Layout/Banner/Banner';\r\nimport { Container,Row,Col,Spinner,Alert } from 'reactstrap';\r\nimport \"./style.css\";\r\nfunction AddKeyword() {\r\n    const toast = useRef(null);\r\n    const toast1 = useRef(null);\r\n    const [keywords,setKeywords] = useState([]);\r\n    const [loading,setLoading] = useState(true);\r\n    const [fetching,setFetching] = useState(false);\r\n    const [inProgress,setInProgress] = useState(false);\r\n    const [name,setName] = useState(\"\");\r\n    const showSuccess = () => {\r\n        toast.current.show({severity:'success', summary: 'Category added', detail:`${name} has been added`, life: 3000});\r\n    }\r\n    const showError = () => {\r\n        toast1.current.show({severity:'error', summary: 'Failed to add', detail:'Please try again with a different name', life: 3000});\r\n    }\r\n    const fetchCategories = ()=>{\r\n        if(!loading){\r\n            setFetching(true);\r\n        }\r\n        fetch(`https://la6s3169jc.execute-api.us-east-2.amazonaws.com/v1/skillset`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setKeywords(result.body);\r\n                if(loading){\r\n                    setLoading(false);\r\n                }\r\n                setFetching(false);\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    useEffect(()=>{\r\n        fetchCategories();\r\n    },[]);\r\n    const itemTemplate = (option) => {\r\n        return (\r\n            <h5 id={option.ID}>{option.name}</h5>\r\n        );\r\n    }\r\n    const handleAdd = ()=>{\r\n        setInProgress(true);\r\n        const fetchOptions = {\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({name:name})\r\n        }\r\n        fetch(`https://la6s3169jc.execute-api.us-east-2.amazonaws.com/v1/skillset`,fetchOptions).then(response=>{\r\n            if(response.statusCode===201){\r\n                return response.json();\r\n            }\r\n            else{\r\n                showError();\r\n            }\r\n        }).then(jsonResponse=>{\r\n            return jsonResponse;\r\n        }).then(()=>{\r\n            setInProgress(false);\r\n            showSuccess();\r\n            setName(\"\");\r\n            fetchCategories();\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} position=\"bottom-right\" />\r\n            <Toast ref={toast1} position=\"bottom-right\" />\r\n            {loading?\r\n                <div className=\"loader-container\">\r\n                    <div id=\"preloader\">\r\n                        <div id=\"status\">\r\n                        <div className=\"spinner\">\r\n                            <div className=\"double-bounce1\" />\r\n                            <div className=\"double-bounce2\" />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <>\r\n                    <Banner title=\"Add Keyword\"/>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={6} className=\"left-container\">\r\n                            {fetching?\r\n                            <>\r\n                                <Spinner color=\"primary\"/>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <h3 className=\"left-heading\">Keywords</h3>\r\n                                <ListBox options={keywords} filter optionLabel=\"name\"\r\n                                    itemTemplate={itemTemplate} className=\"category-list\" />\r\n                            </>}\r\n                            </Col>\r\n                            <Col md={6} className=\"right-container\">\r\n                            <h4 className=\"left-heading\">Add new Keyword</h4>\r\n                            <div className=\"p-inputgroup\">\r\n                                <InputText placeholder=\"Enter Name\" id=\"filter-name\" onChange={(event)=>{\r\n                                    setName(event.target.value);\r\n                                }} value={name}/>\r\n                                {inProgress?<Spinner color=\"primary\"/>:<Button label=\"Add\" onClick={handleAdd}/>}\r\n                            </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddKeyword\r\n\r\n\r\n",["75","76"],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\updateGuru\\updateGuru.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\Footer\\Footer.jsx",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addAvailability\\addAvailability.js",["77","78","79","80"],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\App.js",["81"],"/* eslint-disable react/no-array-index-key */\n/* eslint-disable max-classes-per-file */\n// import './App.scss';\nimport React, { Suspense } from 'react';\nimport {\n  Route,\n  Switch,\n  BrowserRouter as Router,\n  withRouter\n} from 'react-router-dom';\n\nimport Layout from './views/Layout/Layout';\nimport routes from './routes';\nimport './styles/helper.css';\nimport 'primeicons/primeicons.css';\nimport 'primereact/resources/primereact.css';\nimport 'primeflex/primeflex.css';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nfunction withLayout(WrappedComponent) {\n  return class extends React.PureComponent {\n    render() {\n      return (\n        <Layout>\n          <WrappedComponent />\n        </Layout>\n      );\n    }\n  };\n}\n\nconst Loader = () => (\n  <div id=\"preloader\">\n    <div id=\"status\">\n      <div className=\"spinner\">\n        <div className=\"double-bounce1\" />\n        <div className=\"double-bounce2\" />\n      </div>\n    </div>\n  </div>\n);\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Suspense fallback={Loader()}>\n          <Switch>\n            {routes.map((route, idx) =>\n              route.isWithoutLayout ? (\n                <Route\n                  path={route.path}\n                  exact={route.exact}\n                  component={route.component}\n                  key={idx}\n                />\n              ) : (\n                <Route\n                  path={route.path}\n                  exact\n                  component={withLayout(route.component)}\n                  key={idx}\n                />\n              )\n            )}\n          </Switch>\n        </Suspense>\n      </Router>\n    </>\n  );\n}\nexport default App;\n","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\index.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addCategory\\addCategory.js",["82"],"import React,{useEffect, useState, useRef} from 'react'\r\nimport {ListBox} from \"primereact/listbox\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from \"primereact/button\";\r\nimport Banner from '../Layout/Banner/Banner';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Container,Row,Col,Spinner} from 'reactstrap';\r\nimport \"./style.css\";\r\nfunction AddCategory() {\r\n    const toast = useRef(null);\r\n    const toast1 = useRef(null);\r\n    const [categories,setCategories] = useState([]);\r\n    const [loading,setLoading] = useState(true);\r\n    const [fetching,setFetching] = useState(false);\r\n    const [inProgress,setInProgress] = useState(false);\r\n    const [name,setName] = useState(\"\");\r\n    const showSuccess = () => {\r\n        toast.current.show({severity:'success', summary: 'Category added', detail:`${name} has been added`, life: 3000});\r\n    }\r\n    const showError = () => {\r\n        toast1.current.show({severity:'error', summary: 'Failed to add', detail:'Please try again with a different name', life: 3000});\r\n    }\r\n    const fetchCategories = ()=>{\r\n        if(!loading){\r\n            setFetching(true);\r\n        }\r\n        fetch(`https://6w9erowpnj.execute-api.us-east-2.amazonaws.com/v1/categories`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setCategories(result.body);\r\n                if(loading){\r\n                    setLoading(false);\r\n                }\r\n                setFetching(false);\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    useEffect(()=>{\r\n        fetchCategories();\r\n    },[]);\r\n    const itemTemplate = (option) => {\r\n        return (\r\n            <h5 id={option.ID}>{option.name}</h5>\r\n        );\r\n    }\r\n    const handleAdd = ()=>{\r\n        setInProgress(true);\r\n        const fetchOptions = {\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({name:name})\r\n        }\r\n        fetch(`https://6w9erowpnj.execute-api.us-east-2.amazonaws.com/v1/categories`,fetchOptions).then(response=>{\r\n            if(response.statusCode===200){\r\n                return response.json();\r\n            }\r\n            else{\r\n                showError();\r\n            }\r\n        }).then(jsonResponse=>{\r\n            return jsonResponse;\r\n        }).then(()=>{\r\n            setInProgress(false);\r\n            showSuccess();\r\n            setName(\"\");\r\n            fetchCategories();\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} position=\"bottom-right\" />\r\n            <Toast ref={toast1} position=\"bottom-right\" />\r\n            {loading?\r\n                <div className=\"loader-container\">\r\n                    <div id=\"preloader\">\r\n                        <div id=\"status\">\r\n                        <div className=\"spinner\">\r\n                            <div className=\"double-bounce1\" />\r\n                            <div className=\"double-bounce2\" />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <>\r\n                    <Banner title=\"Add Category\"/>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={6} className=\"left-container\">\r\n                            {fetching?\r\n                            <>\r\n                                <Spinner color=\"primary\"/>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <h3 className=\"left-heading\">Categories</h3>\r\n                                <ListBox options={categories} filter optionLabel=\"name\"\r\n                                    itemTemplate={itemTemplate} className=\"category-list\" />\r\n                            </>}\r\n                            </Col>\r\n                            <Col md={6} className=\"right-container\">\r\n                            <h4 className=\"left-heading\">Add new Category</h4>\r\n                            <div className=\"p-inputgroup\">\r\n                                <InputText placeholder=\"Enter Name\" id=\"filter-name\" onChange={(event)=>{\r\n                                    setName(event.target.value);\r\n                                }} value={name}/>\r\n                                {inProgress?<Spinner color=\"primary\"/>:<Button label=\"Add\" onClick={handleAdd}/>}\r\n                            </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n\r\n","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\viewAllGurus\\viewAllGurus.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addNewGuru\\addNewGuru.js",["83","84","85"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport {\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormGroup,\r\n    Row,\r\n    Spinner,\r\n    Label,\r\n    Input\r\n} from 'reactstrap';\r\nimport { Toast } from 'primereact/toast';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport \"./style.css\"\r\nimport Banner from '../Layout/Banner/Banner';\r\nfunction AddNewGuru() {\r\n    const toast = useRef(null);\r\n    const toast1 = useRef(null);\r\n    const toast2 = useRef(null);\r\n    const toast3 = useRef(null);\r\n    const toast4 = useRef(null);\r\n    const [name,setName] = useState({firstName:\"\",secondName:\"\"});\r\n    const [email,setEmail] = useState(\"\");\r\n    const [bio,setBio] = useState(\"\");\r\n    const [profileString,setProfileString] = useState(\"\");\r\n    const [thumbnailString,setThumbnailString] = useState(\"\");\r\n    const [videoString,setVideoString] = useState(\"\");\r\n    const [keywords,setKeywords] = useState([]);\r\n    const [categories,setCategories] = useState([]);\r\n    const [filters,setFilters] = useState([]);\r\n    const [selectedCategory,setSelectedCategory] = useState(null);\r\n    const [selectedFilter,setSelectedFilter] = useState(null);\r\n    const [selectedKeyword,setSelectedKeyword] = useState(null);\r\n    const [links,setLinks] = useState({\r\n        profile:\"\",\r\n        thumbnail:\"\",\r\n        video:\"\",\r\n    })\r\n    const [profilePreview,setProfilePreview] = useState({\r\n        image:null,\r\n        name:null,\r\n        size:null,\r\n    });\r\n    const [thumbnailPreview,setThumbnailPreview] = useState({\r\n        image:null,\r\n        name:null,\r\n        size:null,\r\n    });\r\n    const [videoPreview,setVideoPreview] = useState({\r\n        image:null,\r\n        name:null,\r\n        size:null,\r\n    });\r\n    const [loading,setLoading] = useState({keyword:true,filter:true,category:true});\r\n    const [uploading,setUploading] = useState({profile:false,thumbnail:false,video:false,whole:false});\r\n    const fetchFilters = ()=>{\r\n        fetch(`https://1qpe25db41.execute-api.us-east-2.amazonaws.com/v1/filter`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setFilters(result.body);\r\n                setLoading((prev)=>{\r\n                    return {...prev,filter:false}\r\n                });\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    const fetchCategories = ()=>{\r\n        fetch(`https://6w9erowpnj.execute-api.us-east-2.amazonaws.com/v1/categories`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setCategories(result.body);\r\n                setLoading((prev)=>{\r\n                    return {...prev,category:false}\r\n                });\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    const fetchKeywords = ()=>{\r\n        fetch(`https://la6s3169jc.execute-api.us-east-2.amazonaws.com/v1/skillset`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setKeywords(result.body);\r\n                setLoading((prev)=>{\r\n                    return {...prev,keyword:false}\r\n                });\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    const onUploadComplete = (type) => {\r\n        if(type===1){\r\n            toast.current.show({severity: 'success', summary: 'Success', detail: 'The profile picture was uploaded'});\r\n        }\r\n        else if(type===2){\r\n            toast1.current.show({severity: 'success', summary: 'Success', detail: 'The intro video thumbnail was uploaded'});\r\n        }\r\n        else if(type===3){\r\n            toast2.current.show({severity: 'success', summary: 'Success', detail: 'The intro video was uploaded'});\r\n        }\r\n        else if(type===4){\r\n            toast4.current.show({severity: 'success', summary: 'Success', detail: `${name.firstName} ${name.secondName} was added successfully`});\r\n        }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        fetchCategories();\r\n        fetchFilters();\r\n        fetchKeywords();\r\n    },[])\r\n    const checkValidations = () =>{\r\n        if(name.firstName!==\"\"&&name.secondName!==\"\"&&email!==\"\"&&bio!==\"\" && selectedCategory &&selectedCategory.length>0&&selectedFilter&&selectedFilter.length>0&&selectedKeyword&&selectedKeyword.length>0&&links.profile!==\"\"&&links.thumbnail!==\"\"&&links.video!==\"\"){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    const itemTemplate = (option) => {\r\n        if (option) {\r\n            return (\r\n                <div className=\"item-container\">\r\n                    <div id={option.ID}>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n        return \"Choose a value\";\r\n    }\r\n    const uploadHandlerProfile = (event)=>{\r\n        setUploading((prev)=>{\r\n            return {...prev,profile:true}\r\n        })\r\n        const guruName=name.firstName+\" \"+name.secondName;\r\n        const fetchOptions = {\r\n            method: \"POST\",\r\n            body: JSON.stringify({guruName:guruName,type:\"profile\"}),\r\n        };\r\n        fetch(\"https://5hsr4euhfe.execute-api.us-east-2.amazonaws.com/dev/uploadProfile\",fetchOptions).then(response=>{\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        })\r\n        .then(jsonResponse=>{\r\n            return jsonResponse;\r\n        })\r\n        .then(async (resObj)=>{\r\n            let binary = atob(profileString.split(\",\")[1])\r\n            let blobArray=[];\r\n            for(let i=0;i<binary.length;i++){\r\n                blobArray.push(binary.charCodeAt(i))\r\n            }\r\n            let blobData = new Blob([new Uint8Array(blobArray)],{type:'image/jpeg'});\r\n            const result = await fetch(resObj.uploadURL,{method:\"PUT\",body:blobData});\r\n            setUploading((prev)=>{\r\n                return {...prev,profile:false}\r\n            })\r\n            setLinks((prev)=>{\r\n                return {...prev,profile:resObj.uploadURL.split(\"?\")[0]}\r\n            })\r\n            onUploadComplete(1);\r\n        \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n    }\r\n    const uploadHandlerThumbnail = (event)=>{\r\n        setUploading((prev)=>{\r\n            return {...prev,thumbnail:true}\r\n        })\r\n        const guruName=name.firstName+\" \"+name.secondName;\r\n        const fetchOptions = {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: JSON.stringify({guruName:guruName,type:\"thumbnail\"}),\r\n\t\t};\r\n        fetch(\"https://5hsr4euhfe.execute-api.us-east-2.amazonaws.com/dev/uploadProfile\",fetchOptions).then(response=>{\r\n            if(response.ok){\r\n            return response.json();\r\n            }\r\n        })\r\n        .then(jsonResponse=>{\r\n            return jsonResponse;\r\n        })\r\n        .then(async (resObj)=>{\r\n            let binary = atob(thumbnailString.split(\",\")[1])\r\n            let blobArray=[];\r\n            for(let i=0;i<binary.length;i++){\r\n                blobArray.push(binary.charCodeAt(i))\r\n            }\r\n            let blobData = new Blob([new Uint8Array(blobArray)],{type:'image/jpeg'});\r\n            const result = await fetch(resObj.uploadURL,{method:\"PUT\",body:blobData});\r\n            setUploading((prev)=>{\r\n                return {...prev,thumbnail:false}\r\n            })\r\n            setLinks((prev)=>{\r\n                return {...prev,thumbnail:resObj.uploadURL.split(\"?\")[0]}\r\n            })\r\n            onUploadComplete(2);\r\n        \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n    }\r\n    const uploadHandlerVideo = (event)=>{\r\n        setUploading((prev)=>{\r\n            return {...prev,video:true}\r\n        })\r\n        const videoID = parseInt(Math.random() * 10000000);\r\n        const guruName=name.firstName+\" \"+name.secondName;\r\n        const fetchOptions = {\r\n            method: \"POST\",\r\n            body: JSON.stringify({guruName:guruName,videoID:videoID,type:\"intro\"}),\r\n        };\r\n        fetch(\"https://5hsr4euhfe.execute-api.us-east-2.amazonaws.com/dev/uploadVideo\",fetchOptions).then(response=>{\r\n        if(response.ok){\r\n            return response.json();\r\n        }\r\n        })\r\n        .then(jsonResponse=>{\r\n            return jsonResponse;\r\n        })\r\n        .then(async (resObj)=>{\r\n            let binary = atob(videoString.split(\",\")[1])\r\n            let blobArray=[];\r\n            for(let i=0;i<binary.length;i++){\r\n                blobArray.push(binary.charCodeAt(i))\r\n            }\r\n            let blobData = new Blob([new Uint8Array(blobArray)],{type:'image/jpeg'});\r\n            const result = await fetch(resObj.uploadURL,{method:\"PUT\",body:blobData});\r\n            setUploading((prev)=>{\r\n                return {...prev,video:false}\r\n            })\r\n            setLinks((prev)=>{\r\n                return {...prev,video:resObj.uploadURL.split(\"?\")[0]}\r\n            })\r\n            onUploadComplete(3);\r\n        \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n    }\r\n    const handleChangeProfile = (event) =>{\r\n        const file = document.getElementById(\"guru-profile\").files[0];\r\n        if(file){\r\n            let reader = new FileReader();\r\n            reader.onload = (e)=>{\r\n                if (!e.target.result.includes('data:image/jpeg')) {\r\n                    alert('Wrong file type - JPEG only.')\r\n                }\r\n                else{\r\n                    setProfilePreview((prev)=>{\r\n                        return {image:URL.createObjectURL(event.target.files[0]),name:event.target.files[0].name,size:Math.round(event.target.files[0].size/1024)}\r\n                    })\r\n                    setProfileString(e.target.result);\r\n                }\r\n            } \r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    const handleChangeThumbnail = (event) =>{\r\n        const file = document.getElementById(\"guru-intro-thumbnail\").files[0];\r\n        if(file){\r\n            let reader = new FileReader();\r\n            reader.onload = (e)=>{\r\n                if (!e.target.result.includes('data:image/jpeg')) {\r\n                    alert('Wrong file type - JPEG only.')\r\n                }\r\n                else{\r\n                    setThumbnailPreview((prev)=>{\r\n                        return {image:URL.createObjectURL(event.target.files[0]),name:event.target.files[0].name,size:Math.round(event.target.files[0].size/1024)}\r\n                    })\r\n                    setThumbnailString(e.target.result);\r\n                }\r\n            } \r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    const handleChangeVideo = (event) =>{\r\n        const file = document.getElementById(\"guru-intro-video\").files[0];\r\n        if(file){\r\n            let reader = new FileReader();\r\n            reader.onload = (e)=>{\r\n                if (!e.target.result.includes('data:video/mp4')) {\r\n                    alert('Wrong file type - MP4 only.')\r\n                }\r\n                else{\r\n                    setVideoPreview((prev)=>{\r\n                        return {image:URL.createObjectURL(event.target.files[0]),name:event.target.files[0].name,size:Math.round(event.target.files[0].size/1024)}\r\n                    })\r\n                    setVideoString(e.target.result);\r\n                }\r\n            } \r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    const handleAdd = (event)=>{\r\n        event.preventDefault();\r\n        const valid = checkValidations();\r\n        if(!valid){\r\n            toast3.current.show({severity: 'error', summary: 'All fields are mandatory', detail: 'Please check that all fields are completely filled'});\r\n        }\r\n        else{\r\n            let guruObj = {\r\n                profilePhoto:links.profile,\r\n                techniqueVideos:{\r\n                    videoID:1,\r\n                    videoList:[],\r\n                },\r\n                introVideo:{\r\n                    photo:links.thumbnail,\r\n                    video:links.video\r\n                },\r\n                bio:bio,\r\n                firstName:name.firstName,\r\n                lastName:name.secondName,\r\n                email:email,\r\n                addedBy:{\r\n                    id:'manual_entry_by_saatvik',\r\n                    name:{\r\n                        firstName:\"Saatvik\",\r\n                        secondName:\"Bhatnagar\"\r\n                    }\r\n                },\r\n                categories:selectedCategory,\r\n                filters: selectedFilter,\r\n                keywords:selectedKeyword,\r\n            }\r\n            const fetchOptions = {\r\n                method: \"POST\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\"\r\n                },\r\n                body: JSON.stringify(guruObj),\r\n            }\r\n            fetch(\"https://j6lw75i817.execute-api.us-east-2.amazonaws.com/v1/gurus\",fetchOptions).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            })\r\n            .then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(resObj=>{\r\n                onUploadComplete(4);\r\n                setName({firstName:\"\",secondName:\"\"});\r\n                setEmail(\"\");\r\n                setBio(\"\");\r\n                setSelectedCategory(null);\r\n                setSelectedFilter(null);\r\n                setSelectedKeyword(null);\r\n                setProfilePreview({\r\n                    image:null,\r\n                    name:null,\r\n                    size:null,\r\n                });\r\n                setThumbnailPreview({\r\n                    image:null,\r\n                    name:null,\r\n                    size:null,\r\n                });\r\n                setVideoPreview({\r\n                    image:null,\r\n                    name:null,\r\n                    size:null,\r\n                });\r\n                setLinks({\r\n                    profile:\"\",\r\n                    thumbnail:\"\",\r\n                    video:\"\",\r\n                })\r\n                document.getElementById(\"guru-profile\").value=\"\";\r\n                document.getElementById(\"guru-intro-video\").value=\"\";\r\n                document.getElementById(\"guru-intro-thumbnail\").value=\"\";\r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast1} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast2} position=\"bottom-right\"></Toast>\r\n            <Toast ref={toast3} position=\"bottom-right\"></Toast>\r\n            {!loading.category && !loading.filter && !loading.keyword ? \r\n            <>\r\n                <Banner title=\"Add New Guru\"/>\r\n                <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                    <Col lg={10} xs={12}>\r\n                        <div className=\"rounded p-4 shadow\">\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                            <Form>\r\n                                <Row>\r\n                                <Col md={6}>\r\n                                    <FormGroup>\r\n                                    <Label>\r\n                                        Guru Name <span className=\"text-danger\">*</span>\r\n                                    </Label>\r\n                                    <div className=\"position-relative\">\r\n                                        <i>\r\n                                        <FeatherIcon\r\n                                            icon=\"user\"\r\n                                            className=\"fea icon-sm icons\"\r\n                                        />\r\n                                        </i>\r\n                                    </div>\r\n                                    <Input\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        type=\"text\"\r\n                                        className=\"form-control pl-5\"\r\n                                        placeholder=\"First Name :\"\r\n                                        value={name.firstName}\r\n                                        onChange={(event)=>{\r\n                                            setName((prev)=>{\r\n                                                return {...prev,firstName:event.target.value}\r\n                                            })\r\n                                        }}\r\n                                    />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <FormGroup>\r\n                                    <Label></Label>\r\n                                    <Input\r\n                                        name=\"lastName\"\r\n                                        id=\"lastName\"\r\n                                        type=\"text\"\r\n                                        className=\"form-control pl-3 mt-2\"\r\n                                        placeholder=\"Last Name :\"\r\n                                        value={name.lastName}\r\n                                        onChange={(event)=>{\r\n                                            setName((prev)=>{\r\n                                                return {...prev,secondName:event.target.value}\r\n                                            })\r\n                                        }}\r\n                                    />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={12}>\r\n                                    <FormGroup>\r\n                                    <Label>\r\n                                        Email{' '}\r\n                                        <span className=\"text-danger\">*</span>\r\n                                    </Label>\r\n                                    <div className=\"position-relative\">\r\n                                        <i>\r\n                                        <FeatherIcon\r\n                                            icon=\"mail\"\r\n                                            className=\"fea icon-sm icons\"\r\n                                        />\r\n                                        </i>\r\n                                    </div>\r\n                                    <Input\r\n                                        name=\"email\"\r\n                                        id=\"email\"\r\n                                        type=\"email\"\r\n                                        className=\"form-control pl-5\"\r\n                                        placeholder=\"Your email :\"\r\n                                        value={email}\r\n                                        onChange={(event)=>{\r\n                                            setEmail(event.target.value)\r\n                                        }}\r\n                                    />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={12}>\r\n                                    <FormGroup>\r\n                                    <Label>\r\n                                        Bio <span className=\"text-danger\">*</span>{' '}\r\n                                    </Label>\r\n                                    <div className=\"position-relative\">\r\n                                        <i>\r\n                                        <FeatherIcon\r\n                                            icon=\"info\"\r\n                                            className=\"fea icon-sm icons\"\r\n                                        />\r\n                                        </i>\r\n                                    </div>\r\n                                    <textarea\r\n                                        name=\"comments\"\r\n                                        id=\"comments\"\r\n                                        rows=\"4\"\r\n                                        className=\"form-control pl-5\"\r\n                                        value={bio}\r\n                                        onChange={(event)=>{\r\n                                            setBio(event.target.value);\r\n                                        }}\r\n                                    ></textarea>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormGroup className=\"multiselect-container\">\r\n                                            <Label>\r\n                                                Select Categories<span className=\"text-danger\">*</span>{' '}\r\n                                            </Label>\r\n                                            <MultiSelect value={selectedCategory} options={categories}  onChange={(e) => setSelectedCategory(e.value)} optionLabel=\"name\" placeholder=\"\" filter className=\"multiselect-custom\" itemTemplate={itemTemplate} selectedItemTemplate={itemTemplate} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormGroup className=\"multiselect-container\">\r\n                                            <Label>\r\n                                                Select Filters<span className=\"text-danger\">*</span>{' '}\r\n                                            </Label>\r\n                                            <MultiSelect value={selectedFilter} options={filters}  onChange={(e) => {\r\n                                                setSelectedFilter(e.value)}} optionLabel=\"name\" placeholder=\"\" filter className=\"multiselect-custom\" itemTemplate={itemTemplate} selectedItemTemplate={itemTemplate} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormGroup className=\"multiselect-container\">\r\n                                            <Label>\r\n                                                Select Keywords<span className=\"text-danger\">*</span>{' '}\r\n                                            </Label>\r\n                                            <MultiSelect value={selectedKeyword} options={keywords}  onChange={(e) => {\r\n                                                setSelectedKeyword(e.value)}} optionLabel=\"name\" placeholder=\"\" filter className=\"multiselect-custom\" itemTemplate={itemTemplate} selectedItemTemplate={itemTemplate} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormGroup className=\"upload-container\">\r\n                                            <Label>\r\n                                                Profile Photo<span className=\"text-danger\">*</span>{' '}\r\n                                            </Label>\r\n                                            <input id=\"guru-profile\" onChange={handleChangeProfile} type=\"file\"/>\r\n                                            <div className=\"preview-container\">\r\n                                                {!profilePreview.image?<h5>Select a file to upload</h5>:\r\n                                                <div className=\"preview-bar\">\r\n                                                    <img src={profilePreview.image} className=\"preview-img\" alt=\"preview\"/>\r\n                                                    <h6>{profilePreview.name}</h6>\r\n                                                    <h6>{`${profilePreview.size} kb`}</h6>\r\n                                                    <button onClick={()=>{\r\n                                                        document.getElementById(\"guru-profile\").value=\"\";\r\n                                                        setProfilePreview({name:null,image:null,size:null});\r\n                                                    }}>\r\n                                                        <FeatherIcon icon=\"x-square\"/>\r\n                                                    </button>\r\n                                                </div>\r\n                                                \r\n                                                }\r\n                                            </div>\r\n                                            {uploading.profile?<Spinner color=\"black\" className=\"mt-2 ml-3\"/>:<button className=\"upload-btn mt-2\" onClick={uploadHandlerProfile}><FeatherIcon icon=\"upload\"/></button>}\r\n                                            \r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormGroup className=\"upload-container\">\r\n                                            <Label>\r\n                                                Intro Video Thumbnail<span className=\"text-danger\">*</span>{' '}\r\n                                            </Label>\r\n                                            <input id=\"guru-intro-thumbnail\" onChange={handleChangeThumbnail} type=\"file\"/>\r\n                                            <div className=\"preview-container\">\r\n                                                {!thumbnailPreview.image?<h5>Select a file to upload</h5>:\r\n                                                <div className=\"preview-bar\">\r\n                                                    <img src={thumbnailPreview.image} className=\"preview-img\" alt=\"preview\"/>\r\n                                                    <h6>{thumbnailPreview.name}</h6>\r\n                                                    <h6>{`${thumbnailPreview.size} kb`}</h6>\r\n                                                    <button onClick={()=>{\r\n                                                        document.getElementById(\"guru-intro-thumbnail\").value=\"\";\r\n                                                        setThumbnailPreview({name:null,image:null,size:null});\r\n                                                    }}>\r\n                                                        <FeatherIcon icon=\"x-square\"/>\r\n                                                    </button>\r\n                                                </div>\r\n                                                \r\n                                                }\r\n                                            </div>\r\n                                            {uploading.thumbnail?<Spinner color=\"black\" className=\"mt-2 ml-3\"/>:<button className=\"upload-btn mt-2\" onClick={uploadHandlerThumbnail}><FeatherIcon icon=\"upload\"/></button>}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormGroup className=\"upload-container\">\r\n                                            <Label>\r\n                                                Intro Video<span className=\"text-danger\">*</span>{' '}\r\n                                            </Label>\r\n                                            <input id=\"guru-intro-video\" onChange={handleChangeVideo} type=\"file\"/>\r\n                                            <div className=\"preview-video-container\">\r\n                                                {!videoPreview.image?<h5>Select a file to upload</h5>:\r\n                                                <div className=\"preview-bar\">\r\n                                                    <video src={videoPreview.image} className=\"preview-video\" controls/>\r\n                                                    <h6>{videoPreview.name}</h6>\r\n                                                    <h6>{`${videoPreview.size} kb`}</h6>\r\n                                                    <button onClick={()=>{\r\n                                                        document.getElementById(\"guru-intro-video\").value=\"\";\r\n                                                        setVideoPreview({name:null,image:null,size:null});\r\n                                                    }}>\r\n                                                        <FeatherIcon icon=\"x-square\"/>\r\n                                                    </button>\r\n                                                </div>\r\n                                                \r\n                                                }\r\n                                            </div>\r\n                                            {uploading.video?<Spinner color=\"black\" className=\"mt-2 ml-3\"/>:<button className=\"upload-btn mt-2\" onClick={uploadHandlerVideo}><FeatherIcon icon=\"upload\"/></button>}\r\n                                            \r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                <Col sm={12}>\r\n                                    <input\r\n                                    type=\"submit\"\r\n                                    id=\"submit\"\r\n                                    name=\"send\"\r\n                                    className=\"touch-btn\"\r\n                                    value=\"Add\"\r\n                                    onClick={handleAdd}\r\n                                    />\r\n                                </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        </div>\r\n                    </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n            :\r\n            <div className=\"loader-container\">\r\n                <div id=\"preloader\">\r\n                    <div id=\"status\">\r\n                    <div className=\"spinner\">\r\n                        <div className=\"double-bounce1\" />\r\n                        <div className=\"double-bounce2\" />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewGuru\r\n","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addNewVideo\\addNewVideo.js",["86","87","88","89","90"],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\addFilter\\addFilter.js",["91","92"],"import React,{useEffect, useRef, useState} from 'react'\r\nimport {ListBox} from \"primereact/listbox\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from \"primereact/button\";\r\nimport Banner from '../Layout/Banner/Banner';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Container,Row,Col,Spinner,Alert } from 'reactstrap';\r\nimport \"./style.css\";\r\nfunction AddFilter() {\r\n    const toast = useRef(null);\r\n    const toast1 = useRef(null);\r\n    const [filter,setFilters] = useState([]);\r\n    const [loading,setLoading] = useState(true);\r\n    const [fetching,setFetching] = useState(false);\r\n    const [inProgress,setInProgress] = useState(false);\r\n    const [name,setName] = useState(\"\");\r\n    const showSuccess = () => {\r\n        toast.current.show({severity:'success', summary: 'Category added', detail:`${name} has been added`, life: 3000});\r\n    }\r\n    const showError = () => {\r\n        toast1.current.show({severity:'error', summary: 'Failed to add', detail:'Please try again with a different name', life: 3000});\r\n    }\r\n    const fetchFilters = ()=>{\r\n        if(!loading){\r\n            setFetching(true);\r\n        }\r\n        fetch(`https://1qpe25db41.execute-api.us-east-2.amazonaws.com/v1/filter`).then(response=>{\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse=>{\r\n                return jsonResponse;\r\n            })\r\n            .then(result=>{\r\n                setFilters(result.body);\r\n                if(loading){\r\n                    setLoading(false);\r\n                }\r\n                setFetching(false);\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n    useEffect(()=>{\r\n        fetchFilters();\r\n    },[]);\r\n    const itemTemplate = (option) => {\r\n        return (\r\n            <h5 id={option.ID}>{option.name}</h5>\r\n        );\r\n    }\r\n    const handleAdd = ()=>{\r\n        setInProgress(true);\r\n        const fetchOptions = {\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({name:name})\r\n        }\r\n        fetch(`https://1qpe25db41.execute-api.us-east-2.amazonaws.com/v1/filter`,fetchOptions).then(response=>{\r\n            if(response.statusCode===200){\r\n                return response.json();\r\n            }\r\n            else{\r\n                showError();\r\n            }\r\n        }).then(jsonResponse=>{\r\n            return jsonResponse;\r\n        }).then(()=>{\r\n            setInProgress(false);\r\n            showSuccess();\r\n            setName(\"\");\r\n            fetchFilters();\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} position=\"bottom-right\" />\r\n            <Toast ref={toast1} position=\"bottom-right\" />\r\n            {loading?\r\n                <div className=\"loader-container\">\r\n                    <div id=\"preloader\">\r\n                        <div id=\"status\">\r\n                        <div className=\"spinner\">\r\n                            <div className=\"double-bounce1\" />\r\n                            <div className=\"double-bounce2\" />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <>\r\n                    <Banner title=\"Add EA Filter\"/>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={6} className=\"left-container\">\r\n                            {fetching?\r\n                            <>\r\n                                <Spinner color=\"primary\"/>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <h3 className=\"left-heading\">Filters</h3>\r\n                                <ListBox options={filter} filter optionLabel=\"name\"\r\n                                    itemTemplate={itemTemplate} className=\"category-list\" />\r\n                            </>}\r\n                            \r\n                            </Col>\r\n                            <Col md={6} className=\"right-container\">\r\n                            <h4 className=\"left-heading\">Add new EA filter</h4>\r\n                            <div className=\"p-inputgroup\">\r\n                                <InputText placeholder=\"Enter Name\" id=\"filter-name\" onChange={(event)=>{\r\n                                    setName(event.target.value);\r\n                                }} value={name}/>\r\n                                {inProgress?<Spinner color=\"primary\"/>:<Button label=\"Add\" onClick={handleAdd}/>}\r\n                            </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFilter\r\n","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\routes.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\Layout.jsx",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\TopNavBar\\TopNavBar.jsx",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-adminportal\\src\\views\\Layout\\Banner\\Banner.js",[],{"ruleId":"93","severity":1,"message":"94","line":7,"column":36,"nodeType":"95","messageId":"96","endLine":7,"endColumn":41},{"ruleId":"97","severity":1,"message":"98","line":46,"column":7,"nodeType":"99","endLine":46,"endColumn":9,"suggestions":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"93","severity":1,"message":"105","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":19},{"ruleId":"93","severity":1,"message":"106","line":15,"column":11,"nodeType":"95","messageId":"96","endLine":15,"endColumn":16},{"ruleId":"93","severity":1,"message":"107","line":22,"column":15,"nodeType":"95","messageId":"96","endLine":22,"endColumn":20},{"ruleId":"97","severity":1,"message":"108","line":246,"column":7,"nodeType":"99","endLine":246,"endColumn":9,"suggestions":"109"},{"ruleId":"93","severity":1,"message":"110","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":46,"column":7,"nodeType":"99","endLine":46,"endColumn":9,"suggestions":"111"},{"ruleId":"93","severity":1,"message":"112","line":168,"column":19,"nodeType":"95","messageId":"96","endLine":168,"endColumn":25},{"ruleId":"93","severity":1,"message":"112","line":205,"column":19,"nodeType":"95","messageId":"96","endLine":205,"endColumn":25},{"ruleId":"93","severity":1,"message":"112","line":243,"column":19,"nodeType":"95","messageId":"96","endLine":243,"endColumn":25},{"ruleId":"93","severity":1,"message":"113","line":14,"column":9,"nodeType":"95","messageId":"96","endLine":14,"endColumn":13},{"ruleId":"93","severity":1,"message":"106","line":24,"column":11,"nodeType":"95","messageId":"96","endLine":24,"endColumn":16},{"ruleId":"93","severity":1,"message":"107","line":30,"column":15,"nodeType":"95","messageId":"96","endLine":30,"endColumn":20},{"ruleId":"93","severity":1,"message":"112","line":166,"column":19,"nodeType":"95","messageId":"96","endLine":166,"endColumn":25},{"ruleId":"93","severity":1,"message":"112","line":203,"column":19,"nodeType":"95","messageId":"96","endLine":203,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":7,"column":36,"nodeType":"95","messageId":"96","endLine":7,"endColumn":41},{"ruleId":"97","severity":1,"message":"114","line":46,"column":7,"nodeType":"99","endLine":46,"endColumn":9,"suggestions":"115"},"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCategories'. Either include it or remove the dependency array.","ArrayExpression",["116"],"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"'FeatherIcon' is defined but never used.","'query' is assigned a value but never used.","'setId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAvailability'. Either include it or remove the dependency array.",["119"],"'withRouter' is defined but never used.",["120"],"'result' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchFilters'. Either include it or remove the dependency array.",["121"],{"desc":"122","fix":"123"},"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"122","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [fetchCategories]",{"range":"129","text":"130"},"Update the dependencies array to be: [fetchAvailability]",{"range":"131","text":"132"},{"range":"133","text":"130"},"Update the dependencies array to be: [fetchFilters]",{"range":"134","text":"135"},[1792,1794],"[fetchCategories]",[9077,9079],"[fetchAvailability]",[1795,1797],[1780,1782],"[fetchFilters]"]